(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[         0,          0]
NotebookDataLength[    380788,       7474]
NotebookOptionsPosition[    375521,       7376]
NotebookOutlinePosition[    376014,       7395]
CellTagsIndexPosition[    375971,       7392]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{
  RowBox[{"data", "=", 
   RowBox[{"Import", "[", 
    RowBox[{
    "\"\</Users/daniel/Documents/Columbia/Research/Kipping/papers/koi3678_\
paper/lombscargle/times_input.txt\>\"", ",", "\"\<Table\>\""}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.887294594723768*^9, 3.887294616647126*^9}, 
   3.8874799741071997`*^9},
 CellLabel->
  "In[418]:=",ExpressionUUID->"4f183644-d51b-4934-8797-cc3f699f319f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"lin", "=", 
   RowBox[{"LinearModelFit", "[", 
    RowBox[{
     RowBox[{"data", "[", 
      RowBox[{"[", 
       RowBox[{
        RowBox[{"2", ";;", "All"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "2"}], "}"}]}], "]"}], "]"}], ",", 
     RowBox[{"{", "t", "}"}], ",", "t"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"P0", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"lin", "[", "\"\<ParameterTableEntries\>\"", "]"}], "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", "1"}], "]"}], "]"}], "[", 
    RowBox[{"[", "2", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Tau]0", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"lin", "[", "\"\<ParameterTableEntries\>\"", "]"}], "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", "1"}], "]"}], "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.887294619246561*^9, 3.887294684561307*^9}},
 CellLabel->
  "In[419]:=",ExpressionUUID->"4fecc9d4-da1a-4199-8333-5b6f088492aa"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"fn", "[", 
   RowBox[{
   "\[Tau]_", ",", "P_", ",", "\[Alpha]_", ",", "\[Beta]_", ",", "Pttv_", ",",
     "t_"}], "]"}], ":=", 
  RowBox[{"\[Tau]", "+", 
   RowBox[{"P", " ", "t"}], "+", 
   RowBox[{"\[Alpha]", " ", 
    RowBox[{"Sin", "[", 
     FractionBox[
      RowBox[{"2", "\[Pi]", " ", "t"}], "Pttv"], "]"}]}], "+", 
   RowBox[{"\[Beta]", " ", 
    RowBox[{"Cos", "[", 
     FractionBox[
      RowBox[{"2", "\[Pi]", " ", "t"}], "Pttv"], 
     "]"}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Chi]2", "[", 
    RowBox[{
    "\[Tau]_", ",", "P_", ",", "\[Alpha]_", ",", "\[Beta]_", ",", "Pttv_", 
     ",", "datain_"}], "]"}], ":=", 
   RowBox[{"Sum", "[", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       FractionBox[
        RowBox[{
         RowBox[{"fn", "[", 
          RowBox[{
          "\[Tau]", ",", "P", ",", "\[Alpha]", ",", "\[Beta]", ",", "Pttv", 
           ",", 
           RowBox[{"datain", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "1"}], "]"}], "]"}]}], "]"}], "-", 
         RowBox[{"datain", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "2"}], "]"}], "]"}]}], 
        RowBox[{"datain", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "3"}], "]"}], "]"}]], ")"}], "2"], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "datain", "]"}]}], "}"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.887294738989613*^9, 3.887294854141275*^9}, {
   3.887295042721829*^9, 3.887295043080948*^9}, 3.887295187167281*^9, {
   3.8872954716605463`*^9, 3.887295493968425*^9}, {3.887296444479204*^9, 
   3.8872964540738287`*^9}},
 CellLabel->
  "In[422]:=",ExpressionUUID->"2053419e-ff62-47cd-a596-c433be1e0184"],

Cell[CellGroupData[{

Cell["Without last point, standard LS", "Subsection",
 CellChangeTimes->{{3.8872956400139723`*^9, 3.8872956496097918`*^9}, {
  3.8872976321234922`*^9, 
  3.887297638408165*^9}},ExpressionUUID->"2ae677b7-4bf9-426c-b3da-\
cc927b91c250"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"input", "=", 
   RowBox[{"data", "[", 
    RowBox[{"[", 
     RowBox[{"2", ";;", 
      RowBox[{
       RowBox[{"Length", "[", "data", "]"}], "-", "1"}]}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"<<", "ErrorBarPlots`"}], "\[IndentingNewLine]", 
 RowBox[{"ErrorListPlot", "[", 
  RowBox[{"input", ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.887295654302436*^9, 3.887295677937406*^9}, {
  3.887295847673296*^9, 3.887295860381323*^9}},
 CellLabel->
  "In[424]:=",ExpressionUUID->"c225048a-7a31-4b10-9277-e410ef1b9617"],

Cell[BoxData[
 TemplateBox[{
  "General", "obspkg", 
   "\"\\!\\(\\*RowBox[{\\\"\\\\\\\"ErrorBarPlots`\\\\\\\"\\\"}]\\) is now \
obsolete. The legacy version being loaded may conflict with current \
functionality. See the Compatibility Guide for updating information.\"", 2, 
   425, 569, 22778220159837366060, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.887295860849492*^9, 3.8872962322566566`*^9, 
  3.887296463515677*^9, 3.887296820350782*^9, 3.887297648062314*^9, 
  3.887298062498026*^9, 3.887300390950583*^9, 3.887479977502252*^9},
 CellLabel->
  "During evaluation of \
In[424]:=",ExpressionUUID->"3199b06d-cd65-4d24-8c34-a7318b971aec"],

Cell[BoxData[
 GraphicsBox[{{}, 
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`], 
    AbsoluteThickness[1.6], 
    PointBox[{{0., 277.50563138588}, {1., 438.38774745931}, {3., 
     760.15460392183}, {4., 921.04575770448}, {5., 1081.929434471582}, {6., 
     1242.808993508603}, {7., 1403.70185721408}, {8., 
     1564.577607058811}}], {{
      LineBox[{{0., 277.506026057984}, {0., 277.505236713776}}], 
      LineBox[{Offset[{1.5, 0}, {0., 277.506026057984}], 
        Offset[{-1.5, 0}, {0., 277.506026057984}]}], 
      LineBox[{Offset[{1.5, 0}, {0., 277.505236713776}], 
        Offset[{-1.5, 0}, {0., 277.505236713776}]}]}, {
      LineBox[{{1., 438.388184228468}, {1., 438.387310690152}}], 
      LineBox[{Offset[{1.5, 0}, {1., 438.388184228468}], 
        Offset[{-1.5, 0}, {1., 438.388184228468}]}], 
      LineBox[{Offset[{1.5, 0}, {1., 438.387310690152}], 
        Offset[{-1.5, 0}, {1., 438.387310690152}]}]}, {
      LineBox[{{3., 760.155072881694}, {3., 760.1541349619661}}], 
      LineBox[{Offset[{1.5, 0}, {3., 760.155072881694}], 
        Offset[{-1.5, 0}, {3., 760.155072881694}]}], 
      LineBox[{Offset[{1.5, 0}, {3., 760.1541349619661}], 
        Offset[{-1.5, 0}, {3., 760.1541349619661}]}]}, {
      LineBox[{{4., 921.046158422443}, {4., 921.045356986517}}], 
      LineBox[{Offset[{1.5, 0}, {4., 921.046158422443}], 
        Offset[{-1.5, 0}, {4., 921.046158422443}]}], 
      LineBox[{Offset[{1.5, 0}, {4., 921.045356986517}], 
        Offset[{-1.5, 0}, {4., 921.045356986517}]}]}, {
      LineBox[{{5., 1081.92985557429}, {5., 1081.929013368874}}], 
      LineBox[{Offset[{1.5, 0}, {5., 1081.92985557429}], 
        Offset[{-1.5, 0}, {5., 1081.92985557429}]}], 
      LineBox[{Offset[{1.5, 0}, {5., 1081.929013368874}], 
        Offset[{-1.5, 0}, {5., 1081.929013368874}]}]}, {
      LineBox[{{6., 1242.809358286191}, {6., 1242.808628731015}}], 
      LineBox[{Offset[{1.5, 0}, {6., 1242.809358286191}], 
        Offset[{-1.5, 0}, {6., 1242.809358286191}]}], 
      LineBox[{Offset[{1.5, 0}, {6., 1242.808628731015}], 
        Offset[{-1.5, 0}, {6., 1242.808628731015}]}]}, {
      LineBox[{{7., 1403.7022777790692`}, {7., 1403.701436649091}}], 
      LineBox[{Offset[{1.5, 0}, {7., 1403.7022777790692`}], 
        Offset[{-1.5, 0}, {7., 1403.7022777790692`}]}], 
      LineBox[{Offset[{1.5, 0}, {7., 1403.701436649091}], 
        Offset[{-1.5, 0}, {7., 1403.701436649091}]}]}, {
      LineBox[{{8., 1564.5779725706311`}, {8., 1564.577241546991}}], 
      LineBox[{Offset[{1.5, 0}, {8., 1564.5779725706311`}], 
        Offset[{-1.5, 0}, {8., 1564.5779725706311`}]}], 
      LineBox[{Offset[{1.5, 0}, {8., 1564.577241546991}], 
        Offset[{-1.5, 0}, {8., 1564.577241546991}]}]}}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> False, "AxisPadding" -> Scaled[0.02], 
    "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05], 
    "OptimizePlotMarkers" -> False, "OptimizePlotMarkers" -> False, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 8.}, {0, 1564.577607058811}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.8872956604971533`*^9, 3.887295678561058*^9}, 
   3.887295860874316*^9, 3.887296232292788*^9, 3.8872964637068033`*^9, 
   3.887296820386221*^9, 3.887297648255775*^9, 3.887298062532757*^9, 
   3.887300391136187*^9, 3.887479977527869*^9},
 CellLabel->
  "Out[426]=",ExpressionUUID->"853fb128-c00e-4c6d-8f0b-3811c01212d1"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Pmax", "=", 
   RowBox[{"2", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Max", "[", 
       RowBox[{"input", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}], "-", 
      RowBox[{"Min", "[", 
       RowBox[{"input", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}]}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Pmin", "=", "2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fmax", "=", 
   RowBox[{"1", "/", "Pmin"}]}], ";", 
  RowBox[{"fmin", "=", 
   RowBox[{"1", "/", "Pmax"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fgrid", "=", 
   RowBox[{"Table", "[", 
    RowBox[{"f", ",", 
     RowBox[{"{", 
      RowBox[{"f", ",", "fmin", ",", "fmax", ",", 
       RowBox[{"0.1", "fmin"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Pgrid", "=", 
   RowBox[{"N", "[", 
    RowBox[{
     RowBox[{"Sort", "[", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"1", "/", 
         RowBox[{"fgrid", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "[", "fgrid", "]"}]}], "}"}]}], "]"}], "]"}], "[", 
     RowBox[{"[", 
      RowBox[{"2", ";;", "All"}], "]"}], "]"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.887294870813925*^9, 3.887294992602936*^9}, {
  3.8872958016581097`*^9, 3.8872958076309566`*^9}},
 CellLabel->
  "In[427]:=",ExpressionUUID->"561778c2-bbf4-449f-93a0-6bd0aeb49793"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"nullfit", "=", 
   RowBox[{"LinearModelFit", "[", 
    RowBox[{
     RowBox[{"input", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "2"}], "}"}]}], "]"}], "]"}], ",", 
     RowBox[{"{", "t", "}"}], ",", "t", ",", 
     RowBox[{"IncludeConstantBasis", "\[Rule]", "True"}], ",", 
     RowBox[{"Weights", "\[Rule]", 
      SuperscriptBox[
       RowBox[{"input", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "3"}], "]"}], "]"}], 
       RowBox[{"-", "2"}]]}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nullparams", "=", 
   RowBox[{
    RowBox[{"nullfit", "[", "\"\<ParameterTableEntries\>\"", "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "1"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"null\[Chi]2trunc", "=", 
  RowBox[{"\[Chi]2", "[", 
   RowBox[{
    RowBox[{"nullparams", "[", 
     RowBox[{"[", "1", "]"}], "]"}], ",", 
    RowBox[{"nullparams", "[", 
     RowBox[{"[", "2", "]"}], "]"}], ",", "0", ",", "0", ",", "2", ",", 
    "input"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"j", "=", "0"}], ";", 
  RowBox[{"Label", "[", "jloop", "]"}], ";", 
  RowBox[{"j", "=", 
   RowBox[{"j", "+", "1"}]}], ";", 
  RowBox[{"lm", "=", 
   RowBox[{"LinearModelFit", "[", 
    RowBox[{
     RowBox[{"input", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "2"}], "}"}]}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", 
       RowBox[{"Sin", "[", 
        FractionBox[
         RowBox[{"2", "\[Pi]", " ", "t"}], 
         RowBox[{"Pgrid", "[", 
          RowBox[{"[", "j", "]"}], "]"}]], "]"}], ",", 
       RowBox[{"Cos", "[", 
        FractionBox[
         RowBox[{"2", "\[Pi]", " ", "t"}], 
         RowBox[{"Pgrid", "[", 
          RowBox[{"[", "j", "]"}], "]"}]], "]"}]}], "}"}], ",", "t", ",", 
     RowBox[{"IncludeConstantBasis", "\[Rule]", "True"}], ",", 
     RowBox[{"Weights", "\[Rule]", 
      SuperscriptBox[
       RowBox[{"input", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "3"}], "]"}], "]"}], 
       RowBox[{"-", "2"}]]}]}], "]"}]}], ";", 
  RowBox[{"params", "=", 
   RowBox[{
    RowBox[{"lm", "[", "\"\<ParameterTableEntries\>\"", "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "1"}], "]"}], "]"}]}], ";", 
  RowBox[{
   SubscriptBox["\[CapitalDelta]\[Chi]2", "j"], "=", 
   RowBox[{"null\[Chi]2trunc", "-", 
    RowBox[{"\[Chi]2", "[", 
     RowBox[{
      RowBox[{"params", "[", 
       RowBox[{"[", "1", "]"}], "]"}], ",", 
      RowBox[{"params", "[", 
       RowBox[{"[", "2", "]"}], "]"}], ",", 
      RowBox[{"params", "[", 
       RowBox[{"[", "3", "]"}], "]"}], ",", 
      RowBox[{"params", "[", 
       RowBox[{"[", "4", "]"}], "]"}], ",", 
      RowBox[{"Pgrid", "[", 
       RowBox[{"[", "j", "]"}], "]"}], ",", "input"}], "]"}]}]}], ";", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"j", "<", 
     RowBox[{"Length", "[", "Pgrid", "]"}]}], ",", 
    RowBox[{"Goto", "[", "jloop", "]"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"LSperiodogramtrunc", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Pgrid", "[", 
        RowBox[{"[", "j", "]"}], "]"}], ",", 
       SubscriptBox["\[CapitalDelta]\[Chi]2", "j"]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "1", ",", 
       RowBox[{"Length", "[", "Pgrid", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Pbesttrunc", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Sort", "[", 
      RowBox[{"LSperiodogramtrunc", ",", 
       RowBox[{
        RowBox[{
         RowBox[{"#1", "[", 
          RowBox[{"[", "2", "]"}], "]"}], ">", 
         RowBox[{"#2", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], "&"}]}], "]"}], "[", 
     RowBox[{"[", "1", "]"}], "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListLogLinearPlot", "[", 
  RowBox[{"LSperiodogramtrunc", ",", 
   RowBox[{"Joined", "\[Rule]", "True"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", "Black"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.8872949947074747`*^9, 3.887295076639962*^9}, {
   3.887295129187661*^9, 3.887295264285939*^9}, {3.8872953203557673`*^9, 
   3.887295361209599*^9}, {3.887295501831452*^9, 3.88729557821631*^9}, {
   3.8872958131466093`*^9, 3.887295830896041*^9}, {3.88729588092336*^9, 
   3.8872959022296352`*^9}, {3.887296468744404*^9, 3.887296499438163*^9}, {
   3.887296533003772*^9, 3.887296533057467*^9}, 3.8872968233493643`*^9, {
   3.887297668075059*^9, 3.887297685646275*^9}, {3.887298043083571*^9, 
   3.8872980455800467`*^9}},
 CellLabel->
  "In[432]:=",ExpressionUUID->"28ac7122-5b39-4a52-8e15-8edb127512bb"],

Cell[BoxData["469.0050867494689`"], "Output",
 CellChangeTimes->{3.8872964999539843`*^9, 3.8872965390502567`*^9, 
  3.887296824637231*^9, 3.887297687552327*^9, 3.8872980651915092`*^9, 
  3.887300391414361*^9, 3.887479977560807*^9},
 CellLabel->
  "Out[434]=",ExpressionUUID->"0e293214-850c-4d55-ab3e-ab8cc5db8625"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {GrayLevel[0], PointSize[0.011000000000000001`], AbsoluteThickness[1.6], 
     LineBox[CompressedData["
1:eJwtkXswFAgcx9diOSl3jdflEUcym7odXKm0v5/3OXnsYj3CLNOuQodbaW3I
s5SjcjmVOs7mMaJRaOTVauXZKY9xLo+2YbzZ9chjl1w3c3985zOfvz5/fA1D
IuksIoFAcPyy/8irwoduuZOAyWduUp5ysKuL71y+PQkTV2hRyRUctCwPqAoK
nYKSkcr7u4s5mCJ7PhDTNwV0auHrhnwOUuSeaKxRp8En5YBpZQ4HD48Pmc9X
TEOVkXsnK5uDHxsraMG6M9DV35Gal8dBnRQdeWbWDOxE3DbxaPrSS89zXtmZ
gZNzzbv3acbgHou0ApOYWcDMnN9vNcYgla33WXF2Fkg9RKdU4UU83fVh4mHw
HNhfCqe2GV/C0mcJwbL3c1ChRKeo1nNxTP+CthljHoy2HE4EuvDwvETXjdo/
D9EbjEFR8WXkikQSpC+AfFr3hEVxPB6/XMy3618AVT3ONYlZAjZ6XelkMBZB
qciuP1Y/AR8Pk3MyhxdB5foDiPOOx7rSO0qrIWIwHVRatH3KQ1dJmi5/XgzW
X7dn5ppxcUDBMYhhLYEjSffml6UxWFJTtpiTKgFbmVY53I7G7ojaH/e+kcBI
ga9gXOECwnecPSKNJXjSe4gemHIOl9ffpysHL4F/acvW4gILax7tK75buQS8
b5mbFDUWcrvlDP6QLUFIYvXAtC8Ld+k2xR50WYZb+oIzhTpsfDxJItk/WIb4
5nbjgDI2+p+XaiuIl6Ft7KD93Wg2GpQ2bXHtVsDxbCz/ZwoLH1qf0qy9twK6
uzQvt2+GoPk9qrR7aQXYnh7v0shMbLmhldHnsgqmjscEMrY/pl5kK30oXYWI
0VWJdNALpxx+cP6K9AmYv7rWt267YxWf+FcY+xNUacXUm805YeRrm1n9zk8g
YbQeGwm0QfFx6WfbI2vAdDnn4+trhQFE90druWsgygqLbuVQ8MX9oZkzhHUQ
jPh1VKqYYHb2zN28C18c618XuRmg4phKcu/oOiRZcK1fvdqPiUfhrSVtA5I2
fkvqyzZGfeJCtKR9Awyu6blZ3TiMoRXVmcdsN4Eg7pYKBZZokbWwbiPYBGYP
7aM+9yR6t1tPnLaVgpVeQ+DOfhsciHJKze+QQllrfpSAZo9vDIWjlzxlINLQ
Vntn6YTC6+YdFuMyMAgd6WgROuOMuq8imbsFVj0amsqk0xg5nVjwcu82VJEa
6BFKbsiXT0tnVW9DYU/AKXK/O2q3noi/7/8ZCv1edam/8EDy84a4BeUdiOpo
PMq7SENezvhVwssdOHvqT50DhnT0EoFJG5WAdcHM/aNNdOQ8PgnPigiImd8H
qbh64tBweU3zLjm02p0cO/TWExO37ZLieHKYVFlv85OTF2aq1W5kiOVQuVc5
yL7GCzW9axuehhPR984v3Tla3jjpGJI8JiaiJZ2sOx/tjYH9f/PJCfJIKDLK
WhF6Yw0x8aZEXQEf+KmWnNjDwAzJ8PZonQJ6HAorsaUx8IUPRf6bcEWsMY98
n5DF+P9fElrHOfzjIWTgvzkbFmQ=
      "]]}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0.6187096052716337, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {
     Charting`ScaledTicks[{Log, Exp}, {Log, Exp}, "Nice", WorkingPrecision -> 
      15.954589770191003`, RotateLabel -> 0], 
     Charting`ScaledFrameTicks[{Log, Exp}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageMargins->0.,
  ImageSize->Automatic,
  ImageSizeRaw->Automatic,
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05], 
    "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Exp[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Exp[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0.6187096052716337, 2.772588722239781}, {0, 466.8087229248638}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->FrontEndValueCache[{
     Charting`ScaledTicks[{Log, Exp}, {Log, Exp}, "Nice", WorkingPrecision -> 
      15.954589770191003`, RotateLabel -> 0], 
     Automatic}, {{{0.6931471805599453, 
       FormBox["2", TraditionalForm], {0.01, 0.}}, {1.6094379124341003`, 
       FormBox["5", TraditionalForm], {0.01, 0.}}, {2.302585092994046, 
       FormBox["10", TraditionalForm], {0.01, 0.}}, {0., 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      0.4054651081081644, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      1.0986122886681098`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      1.3862943611198906`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      1.791759469228055, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      1.9459101490553132`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      2.0794415416798357`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      2.1972245773362196`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      2.70805020110221, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      2.995732273553991, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      3.4011973816621555`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      3.6888794541139363`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      3.912023005428146, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}}, 
     Automatic}]]], "Output",
 CellChangeTimes->{3.8872964999539843`*^9, 3.8872965390502567`*^9, 
  3.887296824637231*^9, 3.887297687552327*^9, 3.8872980651915092`*^9, 
  3.887300391414361*^9, 3.887479977593923*^9},
 CellLabel->
  "Out[438]=",ExpressionUUID->"bd1e39b0-a059-4821-aa40-75c0ca779183"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"lmbesttrunc", "=", 
   RowBox[{"LinearModelFit", "[", 
    RowBox[{
     RowBox[{"input", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "2"}], "}"}]}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", 
       RowBox[{"Sin", "[", 
        FractionBox[
         RowBox[{"2", "\[Pi]", " ", "t"}], "Pbesttrunc"], "]"}], ",", 
       RowBox[{"Cos", "[", 
        FractionBox[
         RowBox[{"2", "\[Pi]", " ", "t"}], "Pbesttrunc"], "]"}]}], "}"}], ",",
      "t", ",", 
     RowBox[{"IncludeConstantBasis", "\[Rule]", "True"}], ",", 
     RowBox[{"Weights", "\[Rule]", 
      SuperscriptBox[
       RowBox[{"input", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "3"}], "]"}], "]"}], 
       RowBox[{"-", "2"}]]}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"times", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"input", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
       RowBox[{
        RowBox[{"input", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "2"}], "]"}], "]"}], "-", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
            "lmbesttrunc", "[", "\"\<ParameterTableEntries\>\"", "]"}], "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", "1"}], "]"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], "+", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
             "lmbesttrunc", "[", "\"\<ParameterTableEntries\>\"", "]"}], "[", 
             RowBox[{"[", 
              RowBox[{"All", ",", "1"}], "]"}], "]"}], "[", 
            RowBox[{"[", "2", "]"}], "]"}], "*", 
           RowBox[{"input", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "1"}], "]"}], "]"}]}]}], ")"}]}], ",", 
       RowBox[{"input", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "3"}], "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "input", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"ErrorListPlot", "[", 
    RowBox[{"times", ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Black"}]}], "]"}], ",", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"lmbesttrunc", "[", "\"\<ParameterTableEntries\>\"", "]"}], 
         "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "1"}], "]"}], "]"}], "[", 
        RowBox[{"[", "3", "]"}], "]"}], " ", 
       RowBox[{"Sin", "[", 
        FractionBox[
         RowBox[{"2", "\[Pi]", " ", "t"}], "Pbesttrunc"], "]"}]}], "+", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"lmbesttrunc", "[", "\"\<ParameterTableEntries\>\"", "]"}], 
         "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "1"}], "]"}], "]"}], "[", 
        RowBox[{"[", "4", "]"}], "]"}], " ", 
       RowBox[{"Cos", "[", 
        FractionBox[
         RowBox[{"2", "\[Pi]", " ", "t"}], "Pbesttrunc"], "]"}]}]}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "30"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Black"}]}], "]"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.887295581524888*^9, 3.8872956193340673`*^9}, {
   3.8872957308864098`*^9, 3.8872957384341*^9}, 3.887296236342762*^9, {
   3.887297696234379*^9, 3.887297736784266*^9}, {3.887298050414049*^9, 
   3.887298059859817*^9}},
 CellLabel->
  "In[439]:=",ExpressionUUID->"a44ddcbf-fcd8-48ed-8e24-d0c752d29701"],

Cell[BoxData[
 GraphicsBox[{{{}, 
    {GrayLevel[0], PointSize[0.012833333333333334`], AbsoluteThickness[1.6], 
     PointBox[{{0., -0.00022417883144498774`}, {1., -0.002571086039495185}, {
      3., -0.004640584795538416}, {4., 0.002050217216378769}, {5., 
      0.001264003680262249}, {6., -0.0036399399366473517`}, {7., 
      0.004760784902373416}, {
      8., -0.003952351004727461}}], {{
       LineBox[{{0., 0.00017049327255501227`}, {0., -0.0006188509354449877}}],
        LineBox[{
        Offset[{1.5, 0}, {0., 0.00017049327255501227`}], 
         Offset[{-1.5, 0}, {0., 0.00017049327255501227`}]}], 
       LineBox[{
        Offset[{1.5, 0}, {0., -0.0006188509354449877}], 
         Offset[{-1.5, 0}, {0., -0.0006188509354449877}]}]}, {
       LineBox[{{1., -0.0021343168814951853`}, {1., -0.003007855197495185}}], 
       LineBox[{
        Offset[{1.5, 0}, {1., -0.0021343168814951853`}], 
         Offset[{-1.5, 0}, {1., -0.0021343168814951853`}]}], 
       LineBox[{
        Offset[{1.5, 0}, {1., -0.003007855197495185}], 
         Offset[{-1.5, 0}, {1., -0.003007855197495185}]}]}, {
       LineBox[{{3., -0.004171624931538416}, {3., -0.005109544659538416}}], 
       LineBox[{
        Offset[{1.5, 0}, {3., -0.004171624931538416}], 
         Offset[{-1.5, 0}, {3., -0.004171624931538416}]}], 
       LineBox[{
        Offset[{1.5, 0}, {3., -0.005109544659538416}], 
         Offset[{-1.5, 0}, {3., -0.005109544659538416}]}]}, {
       LineBox[{{4., 0.0024509351793787692`}, {4., 0.0016494992533787692`}}], 
       LineBox[{
        Offset[{1.5, 0}, {4., 0.0024509351793787692`}], 
         Offset[{-1.5, 0}, {4., 0.0024509351793787692`}]}], 
       LineBox[{
        Offset[{1.5, 0}, {4., 0.0016494992533787692`}], 
         Offset[{-1.5, 0}, {4., 0.0016494992533787692`}]}]}, {
       LineBox[{{5., 0.001685106388262249}, {5., 0.000842900972262249}}], 
       LineBox[{
        Offset[{1.5, 0}, {5., 0.001685106388262249}], 
         Offset[{-1.5, 0}, {5., 0.001685106388262249}]}], 
       LineBox[{
        Offset[{1.5, 0}, {5., 0.000842900972262249}], 
         Offset[{-1.5, 0}, {5., 0.000842900972262249}]}]}, {
       LineBox[{{6., -0.0032751623486473517`}, {6., -0.004004717524647351}}], 
       LineBox[{
        Offset[{1.5, 0}, {6., -0.0032751623486473517`}], 
         Offset[{-1.5, 0}, {6., -0.0032751623486473517`}]}], 
       LineBox[{
        Offset[{1.5, 0}, {6., -0.004004717524647351}], 
         Offset[{-1.5, 0}, {6., -0.004004717524647351}]}]}, {
       LineBox[{{7., 0.005181349891373416}, {7., 0.004340219913373416}}], 
       LineBox[{
        Offset[{1.5, 0}, {7., 0.005181349891373416}], 
         Offset[{-1.5, 0}, {7., 0.005181349891373416}]}], 
       LineBox[{
        Offset[{1.5, 0}, {7., 0.004340219913373416}], 
         Offset[{-1.5, 0}, {7., 0.004340219913373416}]}]}, {
       LineBox[{{8., -0.0035868391847274613`}, {8., -0.004317862824727461}}], 
       LineBox[{
        Offset[{1.5, 0}, {8., -0.0035868391847274613`}], 
         Offset[{-1.5, 0}, {8., -0.0035868391847274613`}]}], 
       LineBox[{
        Offset[{1.5, 0}, {8., -0.004317862824727461}], 
         Offset[{-1.5, 0}, {
          8., -0.004317862824727461}]}]}}}, {{}, {}}}, {{{}, {}, 
     TagBox[
      {GrayLevel[0], AbsoluteThickness[1.6], Opacity[1.], 
       LineBox[CompressedData["
1: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
SBsiYtlPBa3T/fW8qb0rXBuUd0k/uKNFw8+71O4OULQhUeVsr4EH/Xx+XXD5
1yFt0HRa+zmRTsPv3rMUrB/VBreohrAnN2m4v484yZOoDbS+s/pt72l48Mvw
Edk0bbjUtX7p0wINjw3Zhuuc1oYWneEoDiECT462eJhka0MJh9Wn/ToEnv2u
buOQrw1PXPeeumRJ99HPiyjgojb4h6eV/PMh8N+ZzTqHyuj5en6v9oohMMP8
Ifn0Km3wes9/9WkqgVmXRwUKarXBpuOrolYe3WOr9iy1ddrwfN9j9gt07/Az
tC0+bNCG38Fb8D+6h0SZtSZePtCG6RaQ96J7Spqt5NPnZm2oEyZn0P+fYYUt
HF0/H2vD9XdiD4XpcVXeuObVZ9rwU/nOQgS9v5bgeB1Xtza0a0st4WIC64k6
XpJ+qw08n1784M0lsJFke452rzawlu+l+qbQPaSgOPjjszZs5GY+miAIfEo9
Xb16iJ5v4PHGXl8Ck7dOxHmNaUPpc6l+zf0E7jeyfCb6Qxtu/lnvn9UncKLJ
DYH3v+j1sR7plZekr8eS2/fsH20wM7A1e75Bw7Gu7/5tWtWGFMU/Pw9jGs4m
Fyl6MZDhQ+K9ltPFNOyvZ2XVxEiGj2ZLGvKHaJjTuK7w0GYy/HQubZ2VpdcL
eeF37GSQ1YmW3TpHxQ2mPOPaW8hw9z+xUp4nVOxmRd06yUuGM9+yf9e7U7GW
rbybhQAZhMmVhSmKVMzo8D6xWogMK0MmS5w/Kfiqm36PlzgZfowKDHpQKXg5
dCXkvQIZrq+A4rvnUbg78lo2WZkMrW+C+SoNonA51f3+WVUy9MgM3wqpiMQW
R1qY9mqSgatWfw8pPAJfOJlU1mxAhqLvlW2v3obisEzdp2LbyaB1B5uVyYfi
XTmjPw/vIMPqPV4VAUoI/lZgvl0HyDDi+WNw36ZgrFfD/uHyPjIwl0m1VGz4
43dPc9mzPchgShYo/crijrmZKmN8k8lA+iZ4LLaUH7GuYIffqWT4mpJg4j+s
itan/9NNyiBDwCfVcj5DPTTzWex3eSYZ+E4vhXIM7kZvGnIjv14gw5rFO/aX
pXYozy8pyPs6GbziPL75hnuj0y6XzGfqyLB+PTDsT6EPSrZpUUyoJ8P2/W6S
F4/4IsJoZaTsHhm61h0vntL1R478VO9BTIYtg+5qhglByJote1dUOxkyO/mn
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
8FWELq6SPpRdSsbz8LmpmwSBaK+ShWsvsKBFa2UUX5tA947KetypYIHE3MGv
i40JtJmabrOtigXre6I39NqQfNIrb95dzYJ+L6cXRQEEsjtxEgVcY8GG1Dpz
m8ME+mSsSP13gwU6Ztzh3ySf+P/M0k69zYKybmmvYzkEGi9YqqJWy4IvdzP7
/pG8dNji9MLqeyyY/T5DwYnkJYlZy8U2PGDBWY99y0pJPjpRlT/WWseCzy8n
8zrKCKTqpNbv1sCCikB0d6iIQMUy596ONbLg2PpHikN5BNK7p/k89gkZb8uj
R+0ZJN8EFD9UfMaC6rBph/I4AhkvX32j9AUL4JrjL58QAjW3lJWz2liw8NHT
pSpuBNoTuS6vqZ3cf7K8vdacQO/WV6TZdbLgu45dpRXJk55vdWO+d7FA7eH9
8/2KBBpJrAqNfEdeL+aUfjjJRwc4hn4Le1hQzLllKtsuQuIDVxzze1lw+Znj
jktVIpSUQ9ut38eC0V5TfbtjIrTE7MbG+19ZIMi5Dar2IrSm7LZO7yALXss7
F0//IXlnL1eN+MGCM9o1o6ubhIg7/+7iOaMsOPLqtOuxE0K0w/P+lNYEC9q4
qVHiy4Woc8mG4Ru/WRD+enuVwXsBcqmv+7j5DwsU5GbN3DgjQMGrHjf6iLFB
TgqX/FokQP/attROzWaDRuazymPpQejY0eaq4/PY8ISRcWn9VCDK7X166pIU
G6hPj+cO1AYgXPDK/ecSNuhefj8hI+WHeszVnUKU2RBfWFsks9cXzfodYDut
wobYIuXZsmd90IZd83fMVWND4s5TqtGa3qhBjMNcuo4Ngf6r29zEPFCL61lJ
YyM2OBY0PKq0sUddq3wr0zzZsML+0hTDRAVPv7hRtsSHDf2qR5/YCXWw6sHZ
53P92NCymJHs/p6OHdrPZBUJ2PD63e67dqkbcE/s86hb4WzwMn2+9vwrC/z1
C82yJ4UNm1rVEpa7OmGJjCPbPdLZ4JawkXomzRmvQc82D2SwQbZvkVJJgAv2
zfLijWWzQX19cGj5Sjc8vDlXS+I8actM4XdOnlh27MvK5GI2+KZYCGtWe2GD
AqqKfBkbzu9xTF0y6IWFky0yqpfY0F1zLaDRxwePlc1M6N9kw1KRjsQChj/+
Yr2pIOE2G5bdf2sX1uaPO+ckb/lUwwaTEvp65YAAXOOsknPqPhuKZzacO30y
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
DA==
        "]]},
      Annotation[#, "Charting`Private`Tag$361756#1"]& ]}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> False, "AxisPadding" -> Scaled[0.02], 
    "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05], 
    "OptimizePlotMarkers" -> False, "OptimizePlotMarkers" -> False, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 8.}, {-0.004640584795538416, 0.004760784902373416}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.8872955869431753`*^9, 3.887295619614366*^9, {3.887295731015725*^9, 
   3.887295738783503*^9}, 3.887295882128375*^9, 3.887295912596901*^9, 
   3.887296239145658*^9, 3.8872964826710978`*^9, 3.887296543175263*^9, 
   3.88729682792736*^9, {3.8872977305031652`*^9, 3.887297738236236*^9}, 
   3.8872980673074493`*^9, 3.887300393507732*^9, 3.887479978097457*^9},
 CellLabel->
  "Out[441]=",ExpressionUUID->"7f5cf94f-9b88-4bfd-bd4d-e2b106842033"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["With all data", "Subsection",
 CellChangeTimes->{{3.8872956400139723`*^9, 
  3.887295641813829*^9}},ExpressionUUID->"1de0fbae-a313-4e3c-b526-\
e7f36488a402"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"input", "=", 
   RowBox[{"data", "[", 
    RowBox[{"[", 
     RowBox[{"2", ";;", "All"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"<<", "ErrorBarPlots`"}], "\[IndentingNewLine]", 
 RowBox[{"ErrorListPlot", "[", 
  RowBox[{"input", ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.887295688582621*^9, 3.8872956891411047`*^9}, {
  3.887295763511359*^9, 3.88729579627668*^9}},
 CellLabel->
  "In[442]:=",ExpressionUUID->"ee2a05ce-c656-4e0a-9f70-7976bf85a1e5"],

Cell[BoxData[
 TemplateBox[{
  "General", "obspkg", 
   "\"\\!\\(\\*RowBox[{\\\"\\\\\\\"ErrorBarPlots`\\\\\\\"\\\"}]\\) is now \
obsolete. The legacy version being loaded may conflict with current \
functionality. See the Compatibility Guide for updating information.\"", 2, 
   443, 570, 22778220159837366060, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.887295791296979*^9, 3.887295796390545*^9}, 
   3.88729611035711*^9, 3.887296267514593*^9, 3.887296547035631*^9, 
   3.887296828499291*^9, 3.8872972887598057`*^9, 3.887297742202524*^9, 
   3.887298068750163*^9, 3.8873003935394783`*^9, 3.88747997810728*^9},
 CellLabel->
  "During evaluation of \
In[442]:=",ExpressionUUID->"b0d4f0df-d221-4d6c-82ce-59f087b08e8e"],

Cell[BoxData[
 GraphicsBox[{{}, 
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`], 
    AbsoluteThickness[1.6], 
    PointBox[{{0., 277.50563138588}, {1., 438.38774745931}, {3., 
     760.15460392183}, {4., 921.04575770448}, {5., 1081.929434471582}, {6., 
     1242.808993508603}, {7., 1403.70185721408}, {8., 1564.577607058811}, {
     29., 4943.105701977482}}], {{
      LineBox[{{0., 277.506026057984}, {0., 277.505236713776}}], 
      LineBox[{Offset[{1.5, 0}, {0., 277.506026057984}], 
        Offset[{-1.5, 0}, {0., 277.506026057984}]}], 
      LineBox[{Offset[{1.5, 0}, {0., 277.505236713776}], 
        Offset[{-1.5, 0}, {0., 277.505236713776}]}]}, {
      LineBox[{{1., 438.388184228468}, {1., 438.387310690152}}], 
      LineBox[{Offset[{1.5, 0}, {1., 438.388184228468}], 
        Offset[{-1.5, 0}, {1., 438.388184228468}]}], 
      LineBox[{Offset[{1.5, 0}, {1., 438.387310690152}], 
        Offset[{-1.5, 0}, {1., 438.387310690152}]}]}, {
      LineBox[{{3., 760.155072881694}, {3., 760.1541349619661}}], 
      LineBox[{Offset[{1.5, 0}, {3., 760.155072881694}], 
        Offset[{-1.5, 0}, {3., 760.155072881694}]}], 
      LineBox[{Offset[{1.5, 0}, {3., 760.1541349619661}], 
        Offset[{-1.5, 0}, {3., 760.1541349619661}]}]}, {
      LineBox[{{4., 921.046158422443}, {4., 921.045356986517}}], 
      LineBox[{Offset[{1.5, 0}, {4., 921.046158422443}], 
        Offset[{-1.5, 0}, {4., 921.046158422443}]}], 
      LineBox[{Offset[{1.5, 0}, {4., 921.045356986517}], 
        Offset[{-1.5, 0}, {4., 921.045356986517}]}]}, {
      LineBox[{{5., 1081.92985557429}, {5., 1081.929013368874}}], 
      LineBox[{Offset[{1.5, 0}, {5., 1081.92985557429}], 
        Offset[{-1.5, 0}, {5., 1081.92985557429}]}], 
      LineBox[{Offset[{1.5, 0}, {5., 1081.929013368874}], 
        Offset[{-1.5, 0}, {5., 1081.929013368874}]}]}, {
      LineBox[{{6., 1242.809358286191}, {6., 1242.808628731015}}], 
      LineBox[{Offset[{1.5, 0}, {6., 1242.809358286191}], 
        Offset[{-1.5, 0}, {6., 1242.809358286191}]}], 
      LineBox[{Offset[{1.5, 0}, {6., 1242.808628731015}], 
        Offset[{-1.5, 0}, {6., 1242.808628731015}]}]}, {
      LineBox[{{7., 1403.7022777790692`}, {7., 1403.701436649091}}], 
      LineBox[{Offset[{1.5, 0}, {7., 1403.7022777790692`}], 
        Offset[{-1.5, 0}, {7., 1403.7022777790692`}]}], 
      LineBox[{Offset[{1.5, 0}, {7., 1403.701436649091}], 
        Offset[{-1.5, 0}, {7., 1403.701436649091}]}]}, {
      LineBox[{{8., 1564.5779725706311`}, {8., 1564.577241546991}}], 
      LineBox[{Offset[{1.5, 0}, {8., 1564.5779725706311`}], 
        Offset[{-1.5, 0}, {8., 1564.5779725706311`}]}], 
      LineBox[{Offset[{1.5, 0}, {8., 1564.577241546991}], 
        Offset[{-1.5, 0}, {8., 1564.577241546991}]}]}, {
      LineBox[{{29., 4943.111595279101}, {29., 4943.099808675863}}], 
      LineBox[{Offset[{1.5, 0}, {29., 4943.111595279101}], 
        Offset[{-1.5, 0}, {29., 4943.111595279101}]}], 
      LineBox[{Offset[{1.5, 0}, {29., 4943.099808675863}], 
        Offset[{-1.5, 0}, {29., 4943.099808675863}]}]}}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> False, "AxisPadding" -> Scaled[0.02], 
    "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05], 
    "OptimizePlotMarkers" -> False, "OptimizePlotMarkers" -> False, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 29.}, {0, 4943.105701977482}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.8872956892598352`*^9, {3.887295773550653*^9, 3.8872957964103117`*^9}, 
   3.887296110383813*^9, 3.887296267538598*^9, 3.887296547058095*^9, 
   3.887296828518265*^9, 3.8872972887960052`*^9, 3.887297742228867*^9, 
   3.887298068782473*^9, 3.887300393696425*^9, 3.887479978125489*^9},
 CellLabel->
  "Out[444]=",ExpressionUUID->"7bbaf6ba-623d-4470-a574-c97141466d77"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Pmax", "=", 
   RowBox[{"2", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Max", "[", 
       RowBox[{"input", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}], "-", 
      RowBox[{"Min", "[", 
       RowBox[{"input", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}]}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Pmin", "=", "2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fmax", "=", 
   RowBox[{"1", "/", "Pmin"}]}], ";", 
  RowBox[{"fmin", "=", 
   RowBox[{"1", "/", "Pmax"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fgrid", "=", 
   RowBox[{"Table", "[", 
    RowBox[{"f", ",", 
     RowBox[{"{", 
      RowBox[{"f", ",", "fmin", ",", "fmax", ",", 
       RowBox[{"0.1", "fmin"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Pgrid", "=", 
   RowBox[{"N", "[", 
    RowBox[{
     RowBox[{"Sort", "[", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"1", "/", 
         RowBox[{"fgrid", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "[", "fgrid", "]"}]}], "}"}]}], "]"}], "]"}], "[", 
     RowBox[{"[", 
      RowBox[{"2", ";;", "All"}], "]"}], "]"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.887294870813925*^9, 3.887294992602936*^9}, {
  3.8872958016581097`*^9, 3.8872958076309566`*^9}},
 CellLabel->
  "In[445]:=",ExpressionUUID->"0ab8f45f-afd0-43cc-b5c9-d9b867171928"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"nullfit", "=", 
   RowBox[{"LinearModelFit", "[", 
    RowBox[{
     RowBox[{"input", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "2"}], "}"}]}], "]"}], "]"}], ",", 
     RowBox[{"{", "t", "}"}], ",", "t", ",", 
     RowBox[{"IncludeConstantBasis", "\[Rule]", "True"}], ",", 
     RowBox[{"Weights", "\[Rule]", 
      SuperscriptBox[
       RowBox[{"input", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "3"}], "]"}], "]"}], 
       RowBox[{"-", "2"}]]}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nullparams", "=", 
   RowBox[{
    RowBox[{"nullfit", "[", "\"\<ParameterTableEntries\>\"", "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "1"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"null\[Chi]2", "=", 
  RowBox[{"\[Chi]2", "[", 
   RowBox[{
    RowBox[{"nullparams", "[", 
     RowBox[{"[", "1", "]"}], "]"}], ",", 
    RowBox[{"nullparams", "[", 
     RowBox[{"[", "2", "]"}], "]"}], ",", "0", ",", "0", ",", "2", ",", 
    "input"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"j", "=", "0"}], ";", 
  RowBox[{"Label", "[", "jloop", "]"}], ";", 
  RowBox[{"j", "=", 
   RowBox[{"j", "+", "1"}]}], ";", 
  RowBox[{"lm", "=", 
   RowBox[{"LinearModelFit", "[", 
    RowBox[{
     RowBox[{"input", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "2"}], "}"}]}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", 
       RowBox[{"Sin", "[", 
        FractionBox[
         RowBox[{"2", "\[Pi]", " ", "t"}], 
         RowBox[{"Pgrid", "[", 
          RowBox[{"[", "j", "]"}], "]"}]], "]"}], ",", 
       RowBox[{"Cos", "[", 
        FractionBox[
         RowBox[{"2", "\[Pi]", " ", "t"}], 
         RowBox[{"Pgrid", "[", 
          RowBox[{"[", "j", "]"}], "]"}]], "]"}]}], "}"}], ",", "t", ",", 
     RowBox[{"IncludeConstantBasis", "\[Rule]", "True"}], ",", 
     RowBox[{"Weights", "\[Rule]", 
      SuperscriptBox[
       RowBox[{"input", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "3"}], "]"}], "]"}], 
       RowBox[{"-", "2"}]]}]}], "]"}]}], ";", 
  RowBox[{"params", "=", 
   RowBox[{
    RowBox[{"lm", "[", "\"\<ParameterTableEntries\>\"", "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "1"}], "]"}], "]"}]}], ";", 
  RowBox[{
   SubscriptBox["\[CapitalDelta]\[Chi]2", "j"], "=", 
   RowBox[{"null\[Chi]2", "-", 
    RowBox[{"\[Chi]2", "[", 
     RowBox[{
      RowBox[{"params", "[", 
       RowBox[{"[", "1", "]"}], "]"}], ",", 
      RowBox[{"params", "[", 
       RowBox[{"[", "2", "]"}], "]"}], ",", 
      RowBox[{"params", "[", 
       RowBox[{"[", "3", "]"}], "]"}], ",", 
      RowBox[{"params", "[", 
       RowBox[{"[", "4", "]"}], "]"}], ",", 
      RowBox[{"Pgrid", "[", 
       RowBox[{"[", "j", "]"}], "]"}], ",", "input"}], "]"}]}]}], ";", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"j", "<", 
     RowBox[{"Length", "[", "Pgrid", "]"}]}], ",", 
    RowBox[{"Goto", "[", "jloop", "]"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"LSperiodogram", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Pgrid", "[", 
        RowBox[{"[", "j", "]"}], "]"}], ",", 
       SubscriptBox["\[CapitalDelta]\[Chi]2", "j"]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "1", ",", 
       RowBox[{"Length", "[", "Pgrid", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Pbest", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Sort", "[", 
      RowBox[{"LSperiodogram", ",", 
       RowBox[{
        RowBox[{
         RowBox[{"#1", "[", 
          RowBox[{"[", "2", "]"}], "]"}], ">", 
         RowBox[{"#2", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], "&"}]}], "]"}], "[", 
     RowBox[{"[", "1", "]"}], "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"lowest\[Chi]2", "=", 
  RowBox[{"null\[Chi]2", "-", 
   RowBox[{
    RowBox[{
     RowBox[{"Sort", "[", 
      RowBox[{"LSperiodogram", ",", 
       RowBox[{
        RowBox[{
         RowBox[{"#1", "[", 
          RowBox[{"[", "2", "]"}], "]"}], ">", 
         RowBox[{"#2", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], "&"}]}], "]"}], "[", 
     RowBox[{"[", "1", "]"}], "]"}], "[", 
    RowBox[{"[", "2", "]"}], "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"ListLogLinearPlot", "[", 
  RowBox[{"LSperiodogram", ",", 
   RowBox[{"Joined", "\[Rule]", "True"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", "Blue"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.8872949947074747`*^9, 3.887295076639962*^9}, {
   3.887295129187661*^9, 3.887295264285939*^9}, {3.8872953203557673`*^9, 
   3.887295361209599*^9}, {3.887295501831452*^9, 3.88729557821631*^9}, {
   3.8872958131466093`*^9, 3.887295830896041*^9}, {3.887295951413828*^9, 
   3.887295990501319*^9}, {3.887296553972324*^9, 3.887296570080859*^9}, 
   3.887296831640259*^9, {3.8872973248339443`*^9, 3.887297331527382*^9}, {
   3.88729807476199*^9, 3.887298081352909*^9}},
 CellLabel->
  "In[450]:=",ExpressionUUID->"f4643573-f63d-4d52-b84a-d559df2ee9d5"],

Cell[BoxData["534.3449274838615`"], "Output",
 CellChangeTimes->{
  3.8872959908418922`*^9, 3.8872961121840878`*^9, 3.887296269659247*^9, 
   3.88729657200041*^9, 3.887296832018437*^9, 3.887297289992426*^9, {
   3.887297328246894*^9, 3.887297331970592*^9}, 3.887297747236938*^9, {
   3.887298071562373*^9, 3.887298081836648*^9}, 3.887300394250959*^9, 
   3.8874799781660748`*^9},
 CellLabel->
  "Out[452]=",ExpressionUUID->"a921b0a7-2683-45e8-8c25-0a25452181c8"],

Cell[BoxData["53.609112402914434`"], "Output",
 CellChangeTimes->{
  3.8872959908418922`*^9, 3.8872961121840878`*^9, 3.887296269659247*^9, 
   3.88729657200041*^9, 3.887296832018437*^9, 3.887297289992426*^9, {
   3.887297328246894*^9, 3.887297331970592*^9}, 3.887297747236938*^9, {
   3.887298071562373*^9, 3.887298081836648*^9}, 3.887300394250959*^9, 
   3.887479978289756*^9},
 CellLabel->
  "Out[456]=",ExpressionUUID->"d9069c95-1a4a-439f-8972-b1553b7f7be8"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0, 0, 1], PointSize[0.007333333333333334], AbsoluteThickness[
     1.6], LineBox[CompressedData["
1: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
/wHVIiF4
      "]]}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0.5549813482724425, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {
     Charting`ScaledTicks[{Log, Exp}, {Log, Exp}, "Nice", WorkingPrecision -> 
      15.954589770191003`, RotateLabel -> 0], 
     Charting`ScaledFrameTicks[{Log, Exp}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageMargins->0.,
  ImageSize->Automatic,
  ImageSizeRaw->Automatic,
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05], 
    "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Exp[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Exp[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0.5549813482724425, 4.060443010546419}, {0, 480.7358150809471}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->FrontEndValueCache[{
     Charting`ScaledTicks[{Log, Exp}, {Log, Exp}, "Nice", WorkingPrecision -> 
      15.954589770191003`, RotateLabel -> 0], 
     Automatic}, {{{0.6931471805599453, 
       FormBox["2", TraditionalForm], {0.01, 0.}}, {1.6094379124341003`, 
       FormBox["5", TraditionalForm], {0.01, 0.}}, {2.302585092994046, 
       FormBox["10", TraditionalForm], {0.01, 0.}}, {2.995732273553991, 
       FormBox["20", TraditionalForm], {0.01, 0.}}, {3.912023005428146, 
       FormBox["50", TraditionalForm], {0.01, 0.}}, {0., 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      0.4054651081081644, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      1.0986122886681098`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      1.3862943611198906`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      1.791759469228055, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      1.9459101490553132`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      2.0794415416798357`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      2.1972245773362196`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      2.70805020110221, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      3.4011973816621555`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      3.6888794541139363`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      4.0943445622221, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      4.248495242049359, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      4.382026634673881, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      4.499809670330265, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      4.605170185988092, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}}, 
     Automatic}]]], "Output",
 CellChangeTimes->{
  3.8872959908418922`*^9, 3.8872961121840878`*^9, 3.887296269659247*^9, 
   3.88729657200041*^9, 3.887296832018437*^9, 3.887297289992426*^9, {
   3.887297328246894*^9, 3.887297331970592*^9}, 3.887297747236938*^9, {
   3.887298071562373*^9, 3.887298081836648*^9}, 3.887300394250959*^9, 
   3.887479978305355*^9},
 CellLabel->
  "Out[457]=",ExpressionUUID->"3f79d1a8-9848-4d20-aa75-7b38cca3c089"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"lmbest", "=", 
   RowBox[{"LinearModelFit", "[", 
    RowBox[{
     RowBox[{"input", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "2"}], "}"}]}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", 
       RowBox[{"Sin", "[", 
        FractionBox[
         RowBox[{"2", "\[Pi]", " ", "t"}], "Pbest"], "]"}], ",", 
       RowBox[{"Cos", "[", 
        FractionBox[
         RowBox[{"2", "\[Pi]", " ", "t"}], "Pbest"], "]"}]}], "}"}], ",", "t",
      ",", 
     RowBox[{"IncludeConstantBasis", "\[Rule]", "True"}], ",", 
     RowBox[{"Weights", "\[Rule]", 
      SuperscriptBox[
       RowBox[{"input", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "3"}], "]"}], "]"}], 
       RowBox[{"-", "2"}]]}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"times", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"input", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
       RowBox[{
        RowBox[{"input", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "2"}], "]"}], "]"}], "-", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"lmbest", "[", "\"\<ParameterTableEntries\>\"", "]"}], 
            "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", "1"}], "]"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], "+", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"lmbest", "[", "\"\<ParameterTableEntries\>\"", "]"}], 
             "[", 
             RowBox[{"[", 
              RowBox[{"All", ",", "1"}], "]"}], "]"}], "[", 
            RowBox[{"[", "2", "]"}], "]"}], "*", 
           RowBox[{"input", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "1"}], "]"}], "]"}]}]}], ")"}]}], ",", 
       RowBox[{"input", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "3"}], "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "input", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"ErrorListPlot", "[", 
    RowBox[{"times", ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Blue"}]}], "]"}], ",", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"lmbest", "[", "\"\<ParameterTableEntries\>\"", "]"}], "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "1"}], "]"}], "]"}], "[", 
        RowBox[{"[", "3", "]"}], "]"}], " ", 
       RowBox[{"Sin", "[", 
        FractionBox[
         RowBox[{"2", "\[Pi]", " ", "t"}], "Pbest"], "]"}]}], "+", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"lmbest", "[", "\"\<ParameterTableEntries\>\"", "]"}], "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "1"}], "]"}], "]"}], "[", 
        RowBox[{"[", "4", "]"}], "]"}], " ", 
       RowBox[{"Cos", "[", 
        FractionBox[
         RowBox[{"2", "\[Pi]", " ", "t"}], "Pbest"], "]"}]}]}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "30"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Blue"}]}], "]"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.887295995551343*^9, 3.887296197493265*^9}, {
  3.887296771263509*^9, 3.887296775013412*^9}, {3.887298089228867*^9, 
  3.8872980946268578`*^9}},
 CellLabel->
  "In[458]:=",ExpressionUUID->"7a187251-e2a0-41d4-90b8-c91b710c06e7"],

Cell[BoxData[
 GraphicsBox[{{{}, 
    {RGBColor[0, 0, 1], PointSize[0.012833333333333334`], AbsoluteThickness[
     1.6], PointBox[{{0., -0.0008845772050563028}, {
      1., -0.0030825364496536167`}, {3., -0.004854139278791081}, {4., 
      0.0019856106968063614`}, {5., 0.0013483451241427247`}, {
      6., -0.0034066505295413663`}, {7., 0.005143022273159659}, {
      8., -0.0034211656704883353`}, {
      29., -0.04592093316568935}}], {{
       LineBox[{{0., -0.0004899051010563028}, {0., -0.0012792493090563028`}}],
        LineBox[{
        Offset[{1.5, 0}, {0., -0.0004899051010563028}], 
         Offset[{-1.5, 0}, {0., -0.0004899051010563028}]}], 
       LineBox[{
        Offset[{1.5, 0}, {0., -0.0012792493090563028`}], 
         Offset[{-1.5, 0}, {0., -0.0012792493090563028`}]}]}, {
       LineBox[{{1., -0.002645767291653617}, {1., -0.0035193056076536166`}}], 
       LineBox[{
        Offset[{1.5, 0}, {1., -0.002645767291653617}], 
         Offset[{-1.5, 0}, {1., -0.002645767291653617}]}], 
       LineBox[{
        Offset[{1.5, 0}, {1., -0.0035193056076536166`}], 
         Offset[{-1.5, 0}, {1., -0.0035193056076536166`}]}]}, {
       LineBox[{{3., -0.004385179414791081}, {3., -0.005323099142791081}}], 
       LineBox[{
        Offset[{1.5, 0}, {3., -0.004385179414791081}], 
         Offset[{-1.5, 0}, {3., -0.004385179414791081}]}], 
       LineBox[{
        Offset[{1.5, 0}, {3., -0.005323099142791081}], 
         Offset[{-1.5, 0}, {3., -0.005323099142791081}]}]}, {
       LineBox[{{4., 0.0023863286598063615`}, {4., 0.0015848927338063614`}}], 
       LineBox[{
        Offset[{1.5, 0}, {4., 0.0023863286598063615`}], 
         Offset[{-1.5, 0}, {4., 0.0023863286598063615`}]}], 
       LineBox[{
        Offset[{1.5, 0}, {4., 0.0015848927338063614`}], 
         Offset[{-1.5, 0}, {4., 0.0015848927338063614`}]}]}, {
       LineBox[{{5., 0.0017694478321427247`}, {5., 0.0009272424161427247}}], 
       LineBox[{
        Offset[{1.5, 0}, {5., 0.0017694478321427247`}], 
         Offset[{-1.5, 0}, {5., 0.0017694478321427247`}]}], 
       LineBox[{
        Offset[{1.5, 0}, {5., 0.0009272424161427247}], 
         Offset[{-1.5, 0}, {5., 0.0009272424161427247}]}]}, {
       LineBox[{{6., -0.0030418729415413663`}, {
        6., -0.0037714281175413662`}}], 
       LineBox[{
        Offset[{1.5, 0}, {6., -0.0030418729415413663`}], 
         Offset[{-1.5, 0}, {6., -0.0030418729415413663`}]}], 
       LineBox[{
        Offset[{1.5, 0}, {6., -0.0037714281175413662`}], 
         Offset[{-1.5, 0}, {6., -0.0037714281175413662`}]}]}, {
       LineBox[{{7., 0.005563587262159659}, {7., 0.004722457284159659}}], 
       LineBox[{
        Offset[{1.5, 0}, {7., 0.005563587262159659}], 
         Offset[{-1.5, 0}, {7., 0.005563587262159659}]}], 
       LineBox[{
        Offset[{1.5, 0}, {7., 0.004722457284159659}], 
         Offset[{-1.5, 0}, {7., 0.004722457284159659}]}]}, {
       LineBox[{{8., -0.0030556538504883353`}, {
        8., -0.0037866774904883353`}}], 
       LineBox[{
        Offset[{1.5, 0}, {8., -0.0030556538504883353`}], 
         Offset[{-1.5, 0}, {8., -0.0030556538504883353`}]}], 
       LineBox[{
        Offset[{1.5, 0}, {8., -0.0037866774904883353`}], 
         Offset[{-1.5, 0}, {8., -0.0037866774904883353`}]}]}, {
       LineBox[{{29., -0.04002763154668935}, {29., -0.05181423478468935}}], 
       LineBox[{
        Offset[{1.5, 0}, {29., -0.04002763154668935}], 
         Offset[{-1.5, 0}, {29., -0.04002763154668935}]}], 
       LineBox[{
        Offset[{1.5, 0}, {29., -0.05181423478468935}], 
         Offset[{-1.5, 0}, {
          29., -0.05181423478468935}]}]}}}, {{}, {}}}, {{{}, {}, 
     TagBox[
      {RGBColor[0, 0, 1], AbsoluteThickness[1.6], Opacity[1.], 
       LineBox[CompressedData["
1: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
442PNvBpynH2/2Fg/xer0yYDWP0VDThVmhjYREzmvkqUNjDXDb6psGBgFRO1
Tot4bbgzusaQe4GOhbz1PnuQ2vD2pXV6VyUdjxVaiZ06rA2NFyOvD8jQcR41
On4mWxuGX9228SmNxUe37z4ueE4b2rnC+zNnYzCdnnhR86I2UOgVghEQg+1q
zrb7XtUGCV2j+rD2KLxg2aD5uF4bhDZJVeOqXdjHW3AoZ1QbTl0pk+rrC8Q2
B6V+3/qmDcslOvxbxwKwYZGy0LNJbTCO8asUEPXHfJ/XWSwtsPLhMNRvvtMH
19P9z4UJ6kABRZep0OKC5VJvO5uY6MA1yb3rpAcouPxWRcviBh2wSw7iEzcS
x2Zvb5g0Ih0IfLdZPbiKHbmpXJOz3qoDLWWb72jJGKDTDZe+7tipA6rp/p9u
I1v0dzorKTZFB5J+z+S1LnqjVKnMGdoJHZg0LB0Tr/VFkpvSw2dP6UAmfe2a
RqYfMjx1ctuB/3QgtSVQZ21cIIpSPyKddk0HmDxJhx40hKA+b7KytFMHmqyL
jte+i0QRSUzViNc6ULpSH3T7VBSaL6PnavfogICjVrHmxmgkOhtzsPqTDrjm
kF7ovxhknx5m1zyrA2TxwfcXpOJRz92Q+iOLrNjFepZ6Kx6FfwjSs13WgeiN
zetslegoheIv3smtC367mD+tbtLRg0ceQx9kdEFwe3x60XUGsvnm5lqkqAsp
G9vubRhhoDdrXFuD1XRBbMaD74AME03vdLr5TVcX9u0JJTqTmejwke2KFYa6
kNTeNPG6iokEyh2y6aa6YO7eFRwyyESU37Z7f4MumAnrnuUxIlCNvM143RZd
ODSU7SDmTSBra2v/w/a6sLTB60/WQQJ1R1m9snTShYV4+5nEiwQKzALr1W66
MOZZPtRTT6DJ+5vut3npgmdUU8u59wQ6OGBBPe2nC8xA77n6aQLxrTa/6BSs
C2o73DUQN4nOaa8XFtulC2EmHIGKsiRyd3iR2RStC9cGp6Z5dUgkGh0kEkXX
Bcs3Liq7/v//9pNzWRK7deFs9rjKOhsSnSpPE324Txe6rQJIphOJ7J7Ln405
rAslUpHj8iw/cX6vEpM+oguh2myVJiw/PeS1yWk5oQsZb5kbG1h+OqzVJx5/
WhfukXuCb7Gum2+N+08mi7WeckNLQU8SLUSwS7b+pwuv+I2cep1JdDc1N5eR
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
        "]]},
      Annotation[#, "Charting`Private`Tag$374019#1"]& ]}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> False, "AxisPadding" -> Scaled[0.02], 
    "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05], 
    "OptimizePlotMarkers" -> False, "OptimizePlotMarkers" -> False, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 29.}, {-0.04592093316568935, 0.005143022273159659}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.887296097154833*^9, 3.887296113397241*^9}, {
   3.887296166465726*^9, 3.887296198999578*^9}, {3.887296265231646*^9, 
   3.887296271708311*^9}, 3.887296589620708*^9, {3.8872967716497717`*^9, 
   3.8872967762275963`*^9}, 3.887296836143566*^9, 3.887297294170734*^9, 
   3.8872973354584303`*^9, 3.887297750510767*^9, {3.887298093509034*^9, 
   3.887298096065177*^9}, 3.8873003959161663`*^9, 3.8874799788347607`*^9},
 CellLabel->
  "Out[460]=",ExpressionUUID->"eb2bdb63-44e4-4809-8a37-75e99723ec2c"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["With all data + sine wave", "Subsection",
 CellChangeTimes->{{3.8872956400139723`*^9, 3.887295641813829*^9}, {
  3.887296300404614*^9, 3.887296301517291*^9}, {3.887300334132576*^9, 
  3.887300335007338*^9}},ExpressionUUID->"9a7eec7c-b669-465c-80a1-\
9b131b01b482"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"fnfast", "[", 
   RowBox[{
   "\[Tau]_", ",", "P_", ",", "\[Alpha]_", ",", "\[Beta]_", ",", "\[Alpha]f_",
     ",", "\[Beta]f_", ",", "Pttv_", ",", "Pttvfast_", ",", "t_"}], "]"}], ":=", 
  RowBox[{"\[Tau]", "+", 
   RowBox[{"P", " ", "t"}], "+", 
   RowBox[{"\[Alpha]", " ", 
    RowBox[{"Sin", "[", 
     FractionBox[
      RowBox[{"2", "\[Pi]", " ", "t"}], "Pttv"], "]"}]}], "+", 
   RowBox[{"\[Beta]", " ", 
    RowBox[{"Cos", "[", 
     FractionBox[
      RowBox[{"2", "\[Pi]", " ", "t"}], "Pttv"], "]"}]}], "+", 
   RowBox[{"\[Alpha]f", " ", 
    RowBox[{"Sin", "[", 
     FractionBox[
      RowBox[{"2", "\[Pi]", " ", "t"}], "Pttvfast"], "]"}]}], "+", 
   RowBox[{"\[Beta]f", " ", 
    RowBox[{"Cos", "[", 
     FractionBox[
      RowBox[{"2", "\[Pi]", " ", "t"}], "Pttvfast"], 
     "]"}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Chi]2fast", "[", 
    RowBox[{
    "\[Tau]_", ",", "P_", ",", "\[Alpha]_", ",", "\[Beta]_", ",", 
     "\[Alpha]f_", ",", "\[Beta]f_", ",", "Pttv_", ",", "Pttvfast_", ",", 
     "datain_"}], "]"}], ":=", 
   RowBox[{"Sum", "[", 
    RowBox[{
     RowBox[{"(", 
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"fnfast", "[", 
           RowBox[{
           "\[Tau]", ",", "P", ",", "\[Alpha]", ",", "\[Beta]", ",", 
            "\[Alpha]f", ",", "\[Beta]f", ",", "Pttv", ",", "Pttvfast", ",", 
            RowBox[{"datain", "[", 
             RowBox[{"[", 
              RowBox[{"i", ",", "1"}], "]"}], "]"}]}], "]"}], "-", 
          RowBox[{"datain", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "2"}], "]"}], "]"}]}], ")"}], "^", "2"}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"datain", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "3"}], "]"}], "]"}], ")"}], "^", "2"}]], ")"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "datain", "]"}]}], "}"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.887296330790472*^9, 3.8872963762223053`*^9}, {
  3.887296408728671*^9, 3.887296428167779*^9}, {3.887296601041216*^9, 
  3.8872966255869627`*^9}, {3.88730027208777*^9, 3.8873003280818872`*^9}},
 CellLabel->
  "In[461]:=",ExpressionUUID->"2fa91bba-197c-4ad7-8264-6494d417dcaa"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"input", "=", 
   RowBox[{"data", "[", 
    RowBox[{"[", 
     RowBox[{"2", ";;", "All"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"<<", "ErrorBarPlots`"}], "\[IndentingNewLine]", 
 RowBox[{"ErrorListPlot", "[", 
  RowBox[{"input", ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.887295688582621*^9, 3.8872956891411047`*^9}, {
  3.887295763511359*^9, 3.88729579627668*^9}},
 CellLabel->
  "In[463]:=",ExpressionUUID->"95812b96-8751-4322-9746-9669d0ff0942"],

Cell[BoxData[
 TemplateBox[{
  "General", "obspkg", 
   "\"\\!\\(\\*RowBox[{\\\"\\\\\\\"ErrorBarPlots`\\\\\\\"\\\"}]\\) is now \
obsolete. The legacy version being loaded may conflict with current \
functionality. See the Compatibility Guide for updating information.\"", 2, 
   464, 571, 22778220159837366060, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.887295791296979*^9, 3.887295796390545*^9}, 
   3.88729611035711*^9, 3.887296267514593*^9, 3.8872963044611483`*^9, 
   3.887296627809897*^9, 3.8872967910701923`*^9, {3.8872968375519323`*^9, 
   3.8872968512303667`*^9}, 3.887297336666255*^9, 3.8872977579226017`*^9, 
   3.887298099075605*^9, 3.887300396225191*^9, 3.8874799788799477`*^9},
 CellLabel->
  "During evaluation of \
In[463]:=",ExpressionUUID->"7ea5e15c-cd7d-4d3e-abd2-5d26f74cf5e2"],

Cell[BoxData[
 GraphicsBox[{{}, 
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`], 
    AbsoluteThickness[1.6], 
    PointBox[{{0., 277.50563138588}, {1., 438.38774745931}, {3., 
     760.15460392183}, {4., 921.04575770448}, {5., 1081.929434471582}, {6., 
     1242.808993508603}, {7., 1403.70185721408}, {8., 1564.577607058811}, {
     29., 4943.105701977482}}], {{
      LineBox[{{0., 277.506026057984}, {0., 277.505236713776}}], 
      LineBox[{Offset[{1.5, 0}, {0., 277.506026057984}], 
        Offset[{-1.5, 0}, {0., 277.506026057984}]}], 
      LineBox[{Offset[{1.5, 0}, {0., 277.505236713776}], 
        Offset[{-1.5, 0}, {0., 277.505236713776}]}]}, {
      LineBox[{{1., 438.388184228468}, {1., 438.387310690152}}], 
      LineBox[{Offset[{1.5, 0}, {1., 438.388184228468}], 
        Offset[{-1.5, 0}, {1., 438.388184228468}]}], 
      LineBox[{Offset[{1.5, 0}, {1., 438.387310690152}], 
        Offset[{-1.5, 0}, {1., 438.387310690152}]}]}, {
      LineBox[{{3., 760.155072881694}, {3., 760.1541349619661}}], 
      LineBox[{Offset[{1.5, 0}, {3., 760.155072881694}], 
        Offset[{-1.5, 0}, {3., 760.155072881694}]}], 
      LineBox[{Offset[{1.5, 0}, {3., 760.1541349619661}], 
        Offset[{-1.5, 0}, {3., 760.1541349619661}]}]}, {
      LineBox[{{4., 921.046158422443}, {4., 921.045356986517}}], 
      LineBox[{Offset[{1.5, 0}, {4., 921.046158422443}], 
        Offset[{-1.5, 0}, {4., 921.046158422443}]}], 
      LineBox[{Offset[{1.5, 0}, {4., 921.045356986517}], 
        Offset[{-1.5, 0}, {4., 921.045356986517}]}]}, {
      LineBox[{{5., 1081.92985557429}, {5., 1081.929013368874}}], 
      LineBox[{Offset[{1.5, 0}, {5., 1081.92985557429}], 
        Offset[{-1.5, 0}, {5., 1081.92985557429}]}], 
      LineBox[{Offset[{1.5, 0}, {5., 1081.929013368874}], 
        Offset[{-1.5, 0}, {5., 1081.929013368874}]}]}, {
      LineBox[{{6., 1242.809358286191}, {6., 1242.808628731015}}], 
      LineBox[{Offset[{1.5, 0}, {6., 1242.809358286191}], 
        Offset[{-1.5, 0}, {6., 1242.809358286191}]}], 
      LineBox[{Offset[{1.5, 0}, {6., 1242.808628731015}], 
        Offset[{-1.5, 0}, {6., 1242.808628731015}]}]}, {
      LineBox[{{7., 1403.7022777790692`}, {7., 1403.701436649091}}], 
      LineBox[{Offset[{1.5, 0}, {7., 1403.7022777790692`}], 
        Offset[{-1.5, 0}, {7., 1403.7022777790692`}]}], 
      LineBox[{Offset[{1.5, 0}, {7., 1403.701436649091}], 
        Offset[{-1.5, 0}, {7., 1403.701436649091}]}]}, {
      LineBox[{{8., 1564.5779725706311`}, {8., 1564.577241546991}}], 
      LineBox[{Offset[{1.5, 0}, {8., 1564.5779725706311`}], 
        Offset[{-1.5, 0}, {8., 1564.5779725706311`}]}], 
      LineBox[{Offset[{1.5, 0}, {8., 1564.577241546991}], 
        Offset[{-1.5, 0}, {8., 1564.577241546991}]}]}, {
      LineBox[{{29., 4943.111595279101}, {29., 4943.099808675863}}], 
      LineBox[{Offset[{1.5, 0}, {29., 4943.111595279101}], 
        Offset[{-1.5, 0}, {29., 4943.111595279101}]}], 
      LineBox[{Offset[{1.5, 0}, {29., 4943.099808675863}], 
        Offset[{-1.5, 0}, {29., 4943.099808675863}]}]}}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> False, "AxisPadding" -> Scaled[0.02], 
    "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05], 
    "OptimizePlotMarkers" -> False, "OptimizePlotMarkers" -> False, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 29.}, {0, 4943.105701977482}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.8872956892598352`*^9, {3.887295773550653*^9, 3.8872957964103117`*^9}, 
   3.887296110383813*^9, 3.887296267538598*^9, 3.887296304485075*^9, 
   3.8872966278381033`*^9, 3.887296791095643*^9, {3.8872968375746117`*^9, 
   3.8872968512700653`*^9}, 3.887297336701167*^9, 3.887297757955153*^9, 
   3.887298099098866*^9, 3.8873003963689823`*^9, 3.887479978897681*^9},
 CellLabel->
  "Out[465]=",ExpressionUUID->"85a0c226-a989-42d6-9b4a-eebca574c272"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Pmax", "=", 
   RowBox[{"2", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Max", "[", 
       RowBox[{"input", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}], "-", 
      RowBox[{"Min", "[", 
       RowBox[{"input", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}]}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Pmin", "=", "2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fmax", "=", 
   RowBox[{"1", "/", "Pmin"}]}], ";", 
  RowBox[{"fmin", "=", 
   RowBox[{"1", "/", "Pmax"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fgrid", "=", 
   RowBox[{"Table", "[", 
    RowBox[{"f", ",", 
     RowBox[{"{", 
      RowBox[{"f", ",", "fmin", ",", "fmax", ",", 
       RowBox[{"0.1", "fmin"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Pgrid", "=", 
   RowBox[{"N", "[", 
    RowBox[{
     RowBox[{"Sort", "[", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"1", "/", 
         RowBox[{"fgrid", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "[", "fgrid", "]"}]}], "}"}]}], "]"}], "]"}], "[", 
     RowBox[{"[", 
      RowBox[{"2", ";;", "All"}], "]"}], "]"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.887294870813925*^9, 3.887294992602936*^9}, {
  3.8872958016581097`*^9, 3.8872958076309566`*^9}},
 CellLabel->
  "In[466]:=",ExpressionUUID->"83f689fa-f260-4516-98df-41e17ef92a1a"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"initial", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"lmbest", "[", "\"\<ParameterTableEntries\>\"", "]"}], "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", "1"}], "]"}], "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"lmbest", "[", "\"\<ParameterTableEntries\>\"", "]"}], "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", "1"}], "]"}], "]"}], "[", 
      RowBox[{"[", "2", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"lmbest", "[", "\"\<ParameterTableEntries\>\"", "]"}], "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", "1"}], "]"}], "]"}], "[", 
      RowBox[{"[", "3", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"lmbest", "[", "\"\<ParameterTableEntries\>\"", "]"}], "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", "1"}], "]"}], "]"}], "[", 
      RowBox[{"[", "4", "]"}], "]"}], ",", "0", ",", "0", ",", "Pbest"}], 
    "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"j", "=", "0"}], ";", 
  RowBox[{"Label", "[", "jloop", "]"}], ";", 
  RowBox[{"j", "=", 
   RowBox[{"j", "+", "1"}]}], ";", 
  RowBox[{"sol", "=", 
   RowBox[{"NMinimize", "[", 
    RowBox[{
     RowBox[{"\[Chi]2fast", "[", 
      RowBox[{
      "\[Tau]", ",", "P", ",", "\[Alpha]", ",", "\[Beta]", ",", "\[Alpha]f", 
       ",", "\[Beta]f", ",", 
       RowBox[{"Pgrid", "[", 
        RowBox[{"[", "j", "]"}], "]"}], ",", "Pttvfast", ",", "input"}], 
      "]"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "\[Tau]", ",", "P", ",", "\[Alpha]", ",", "\[Beta]", ",", "\[Alpha]f", 
       ",", "\[Beta]f", ",", "Pttvfast"}], "}"}], ",", 
     RowBox[{"Method", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<NelderMead\>\"", ",", 
        RowBox[{"\"\<InitialPoints\>\"", "\[Rule]", 
         RowBox[{"{", "initial", "}"}]}]}], "}"}]}]}], "]"}]}], ";", 
  RowBox[{
   SubscriptBox["\[CapitalDelta]\[Chi]2", "j"], "=", 
   RowBox[{"lowest\[Chi]2", "-", 
    RowBox[{"sol", "[", 
     RowBox[{"[", "1", "]"}], "]"}]}]}], ";", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"j", "<", 
     RowBox[{"Length", "[", "Pgrid", "]"}]}], ",", 
    RowBox[{"Goto", "[", "jloop", "]"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"LSslowperiodogram", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Pgrid", "[", 
        RowBox[{"[", "j", "]"}], "]"}], ",", 
       SubscriptBox["\[CapitalDelta]\[Chi]2", "j"]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "1", ",", 
       RowBox[{"Length", "[", "Pgrid", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Pslowbest", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"Sort", "[", 
     RowBox[{"LSslowperiodogram", ",", 
      RowBox[{
       RowBox[{
        RowBox[{"#1", "[", 
         RowBox[{"[", "2", "]"}], "]"}], ">", 
        RowBox[{"#2", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], "&"}]}], "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}], "[", 
   RowBox[{"[", "1", "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"ListLogLinearPlot", "[", 
  RowBox[{"LSslowperiodogram", ",", 
   RowBox[{"Joined", "\[Rule]", "True"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", "Red"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.8872949947074747`*^9, 3.887295076639962*^9}, {
   3.887295129187661*^9, 3.887295264285939*^9}, {3.8872953203557673`*^9, 
   3.887295361209599*^9}, {3.887295501831452*^9, 3.88729557821631*^9}, {
   3.8872958131466093`*^9, 3.887295830896041*^9}, {3.887295951413828*^9, 
   3.887295990501319*^9}, {3.887296658581952*^9, 3.887296670712891*^9}, 
   3.887296780839493*^9, {3.887297198422768*^9, 3.8872972620124683`*^9}, {
   3.887297344216984*^9, 3.88729735797442*^9}, 3.887297434319255*^9, {
   3.887298102905785*^9, 3.887298106685693*^9}},
 CellLabel->
  "In[471]:=",ExpressionUUID->"090e5f0d-16cf-4084-9ea5-8ab1d48e789c"],

Cell[BoxData["24.166666666666668`"], "Output",
 CellChangeTimes->{
  3.8872959908418922`*^9, 3.8872961121840878`*^9, 3.887296269659247*^9, 
   3.8872967812364798`*^9, {3.887297348720624*^9, 3.887297371786809*^9}, 
   3.887297447984933*^9, 3.8872977809598427`*^9, 3.887298120285561*^9, 
   3.887300396712974*^9, 3.8874799864562387`*^9},
 CellLabel->
  "Out[474]=",ExpressionUUID->"4d8369ae-4555-4fcb-93ba-dfdb3b091c25"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[1, 0, 0], PointSize[0.007333333333333334], AbsoluteThickness[
     1.6], LineBox[CompressedData["
1:eJwVl3k4lN8XwGfG2EfGnq2GRJJ9bdE5kTBUkiKVRAkRohItSllCRCSlrFny
tURlS1OhXYoWLVKyM8YYe/R7f3/d5/N8zj33ufd533PPVfEIcDxIIZFIi8kk
0v9H7iVDsURmL3jur6LVjdrioEugKc+rF8LqywbOsm3xK8O7+GhkL3CWivoG
D9ui23pmikhWL9BytpuFDthiyvXHS+vre8ElzU6JPqWHGXuGT0d39MIX0pyh
RNVKfF8e9N1vshf8ohv/a1+qht2RAb5+Un1gE7RH0TxKCUecopyj9PrAbHvF
rvgySewU7mir3dwHXfIvXslsFECdt4voIof7gBWimSP0bQqQ52QeEtMHpFq3
0aDoPvBhuyfM5PdBxOW45zL2HUAzP2qQ8YzwIniB/2M7NIU47dv5i2DLFuEy
yQ4YtN5vrfOPYP1vDsKVP6E64/wSVeV+QL07LR4Fv0Ep20jeYG0/kKpcX1Xm
/YErAjF+brsITq46fjq5F1Yx1LYUnCDi/c7N1rMGQFjTlkdL6wdWzKO3D86O
Qmjsh9TEKsJf9CnwdODBzIrVvrpt/RCx0u5a1pVZCHqdWjQ81g+t7PzIDkEy
lp7MjX9OHwBGadyGtjkqlk88sWfpDoDD2ueFAtlCWLdmetnnLQMQgUNcn2BR
fCw8ZU87MgDuTUd7UFAMFc8r8rknDABHTGRRgJIYmj4POv+hZABYpMIAerEo
Lql8KHjgzQB0Bew+zeoSwpNp+1qlh4n4mfKrRar8uFYgRaFHdBAYEfdT+8dI
aP3QePlHrUEgGTEueJXPwF7vft0eu0HIiuxOi83gAuuraLiM3yBgfOPtprhB
+NDxzNor/v+cXnCK2w0ijrOfP5cMAssw8mSjwy/474THEd+3hN++7QVq/IZb
8+FblrAJnm9Z9PJ3D9zak1Y/vmgI8M6Gk8aawxCn1T4/qDsE7uquvIaLXHgT
o+NC3TYEWQOH3yjETkNUaqgkHh0Ch9JzwbdsSLhA8Qy5lTIE9D9nhkMi+TH8
3tnmpfeHiPNu71hsTUNnbyvHxk9D0H+0XqSfKYnByVIe8dNDQErSelKjK4ct
qiYbQhWGgWHN8+8sUcLoMwNrY9YRrLGrfo21Co6fc7td7zYMgTFtNBdrNVyX
0VAjc24YspKoHucMNVB6QvdrSu4wpDsv89/Ur4nKzzscTJuHwXt/FOvGplUY
UdR/hDQwDH9krF+IG+qgp3hK1KjoCLjMb3x5KFUXm9qUh6i6I/DlPpVsvUoP
Q7u6OOg4AtXa1hrZ3brYwrYbyT02Am/YvT2e6auw2GPIROf6CLS+fGbNVtbA
u+i/vKt+BMxU0gtFTy5FJbwjUds1AtPR58XqxWTRbyZtRz2VDRx+2/fBN8Vw
Qj/Ivm8FGyIK6+cGQziPX1plOq7dzAaiFJBYKzmPvMofN1UHsYEVyq2o0e17
LHG/geqeRvgL3nbv+8XwucaLAP06NsRoZdqFaDEw1dnZW7uLDUnToW+1ZZbh
ZsW125z4R2HPsZ8hT9M1MIx88/KdlaOgFMc48ElMD2/nUaLUHEbBRLPQQ/qB
Id5Vc7vVcmwUfO/XZEkvNsOqZhHMvzEK48+nVCxV16Bs/Zf2wiejIFhVyaLi
WpyUkHrR0TcKFbqzCeK8NWhw0NJSSZAD0ZYJQi1Oa1CJbvXYQ4ED37vlzFN9
VuOxOXISS5sDUX9e/udpYoZtdavZxhs4YCSfoyDBMsEAdrjUMycOxC+/NOwk
Zow/TVat8fbmgKPZj7MdGoZ4eEdU5vJTHCiJ6N8gr6yPNTtzTs4lciDkquou
5rw2Jv8IFR3MJTzPO6j3qSYGR/cljT3kQMzNkH3y1cvxtd99G8k3HEAX+p1W
QVW88+jaUfsuDnD4th1/WayMWeEmW7N4HLCx3UK5GrQYpRz1GYuExyA0Uf8I
O0wabRLUVqQpj0FhQUf+++cSWK9fWmxmMAZJOmu4h23puNcoeHhi0xjQOaGx
Ou/E8Vm7mmHL7jHost85rnyRjucUopqeBI7BC3XFl3EkSYw9HjTUenEMAi9F
DkoYSOOX2M6RuYwxaP24fj63XxZjJPtlLcuJ9VXsQvkG5DGU9KHiTtMYfJFd
vTeEo4Tf74mLanwj8ot2wbfapTiwjxnYyCHmU/TfqfOrILXwkN5ZAS7wsn8r
dXxSwU87km44K3HB3leg+JiFKt61N+XbYsAFvfu8x+obVLHyDqPWw4YLWUKx
4eSPKphB9ZFOcyN444SKtJAKLqMnHOoP4YJNcxhX/dNSDDQMEnGN48J0mVH+
cQ1lfBDls2Momwv9r+5WsYwVUHNyQ87Nai640zVWhhvJISlnk/2Rd1xIV5Pf
6ewkjUlh9uXuvVxoFV+fpfZYAoMValeFzHMhaaHT6K6mOA52JakUSY9DYLBz
mFa7KOZsOc75pzUO7odZOz8mCaNKwaO/oZbjwPG7EvzDTQg3dQTdld49DqzB
0VqKthBurdjn2XaU8DucjV99F0LuTkbC/UvjQC9ftYRhJYIWCmopdTnjQNpr
OhxnREOl5Ee/emqJ9Yp+1J0LXoSLxbX7jNrGgeFYLVzkScfegyVSRUPj8KLG
h8IJk0BP6fAOCyoPWGEOckMHJDGucbCEosyDpLqMcE9RKfyk50cdMObBiqZP
ivZuUnjM/6bL5BYehCZ4Zf52kkLIcFTT8uZBuZPxVRW2JGqSS/9En+PBF3VH
jyg9SXTOV5MXu0Hk/1S2YKcmgSTrZMu6Kh64pz7yefZaHDO7rPuTW3jgcPQG
NeyNCI5mK16+2s+DLkmXOEsjIWz0P9nAokxAl3T3VFc2P578Gcy/WHkC9BTu
lRRb8WHYj49jGaaEX6IjcciSjC4NRjJMxwnIcvq6hRP8D1QE+Kjq/hPAUmHr
/VogoczT3B26MRNAoh1hrOsl4XTMmTyv3Alg1A/5xXmSsURd+vKbhglweEYT
yAmk4OSMVOX+rxMQeNzrmReXDwtEjz5UnySYHFVJa+LH1t7TFkqSk0Ba8cz6
aoMgjq6eXbDQmQT82VdGuSeMfrbGN24wJyGQLl8mTty3GutUX6ofmgRW5tq2
ng4aWtkFr++JnIQsu0NZkc1iONBZVfU5i5jvbvLcZdki7M32GVh4NAnl8snm
Hb1iKHdN49bub5NAJzsX/JESwzNrH6SzpydB78XHWUqNKI6wtHOrZaeAFF6T
l8oWxih/ufhaoyngfBzKMmsXRDHtRPUJxylgvLkWX5jAj1X7vZg+QVNAj/nX
lgJ8WE6xaZdLmoIs5ffm9TQyvpPrzCeXTUFXoXilj8YCfMqeztdoIfKnluRX
fp2FFNID1qURIt/frQqfnafBsL+kT0tsGtzX6aUtuz8JN6blJGnaBCs2rKfP
ToCLCJ/5qs0EP4w2L1oyCX+twg4n+E8D61XI23WiU9CsWHdH7/I0kMZlslrT
p6He4NCCbBkRr7vtu2DKLNQeqonZ0DoNjIR7TsN1f8F4st6jYozg3XvWp7xf
AP3eqPJDUjPAchWkRDJJuPZ7UOZB4xkoP6B2srKfhLK+e/aUOM8ApzM8lKZP
xijSoIZ52Azg9HSXpyIZC/OaLeQzZ6DLqiETiklomDAytYFFeDvj+lNt/2Bz
Czejupvg3Rf9yV/ngd/cIeaM4CzgMupBqdQ5GLt/f3mq1iywGq/y39WbAa2J
Pb/ntxL+4UlP2vtJ+Ka337Q2hODj1Rs/XOZBZrFC4evrs8BoFPILPs6FTQFn
nho+noWuvkIpchwHtkWcX8r7Mwskra/sD6kjwM2P8lwkOgekE5cGJXwHQUr7
6foL+gQ3vhLqSe+D118e+Du7zEHEVnuPacMe+Ly9qCb2LOGZakWzO7uhInjp
jFLBHLA0u74Oqv4G37wDdKl3RLzbQ/8L1b8g86s013+K8ClKySJGv0EkoPS2
LuMv4PjG9ra73VC5RWulq+1fYJWZuObq90LtWPa90aOE19ELTf5I9JUpbF/u
zb8Q4a/27Wwh0RfoHkw78PwvZEVHi07v5UL7u/hLNlzCN5ypFRCfhLnGP2VZ
yvMQsaumst97FrJ9qs4H2M4T38c2kzCPf3BFpTfl4bF5cPhnRMoJoqCXAzs2
PGce9FxXBXm58yND6rFKw7t5yAqxLi7cJ4TR117qnp+fh0Cmg/AaO1H8PS+W
/UprAThqX8of/BXDxY1rTmW4LkB65IyS0wo6Wrd8/82LJTjPwfunjASamWZL
/qhZgC+Psi3SiXouvqrYa+cgwbTG103LJdFVf9rlgOI/CNRxfvLeQRLfbh6I
FNn8j+jPY5xbCTZ5+C7X/izh6dKrrNdJ4pan2ek69/4ByYkv8oyOJF6dbzxU
1UP411ce3LOSRDeruSVjNBLaBJfO+2dL4urTRWZuGiTMknKy0dovhfESrCfL
LAhmpiStzJXGqQ/zEhv3klCo6FGGZqQsnoizuf4klISM9iO+NxfL459z8123
rpKwPLNp9ZIQJTQw3JXQWU7Cws2dLNktDFxiNO0W+ZaEp7jfzbobVTFgX7BR
0iAJ35w2pI0lL8e1JfI0ISEyvsj8GReRtwLB6hU/ezkZq/8G2TV2auGOx2MH
rDaS0WEhkhSiqoueGf8lSxB1k67WfDFfQx+bLsszdp4nI6ew5nBHrgG+vPTq
hWwOGQ1eOm3izBhiWEX4MeenZFx5RGrRXxVj/KrBXa/UTUZ1C4XnKYtNME1Y
OciHSkGe5kDpbKcJXj914rKlOgXbNlWeEg43xYbLldvLbCj4wyktcHLSFGV3
3K+rOExBt6LUbNJ+M1wo6eVzSKRgfbL1ksFXZighPFKeWElBm2vdQYq2q/F1
9+uU418oWJjSu8JqbDXmt5x9J7JAwaTPnn0uX9agQP7Sn45qfMggB+Y2i6/D
Q2YpN3fY8aFr7vla+RxzrOjiWCsE82FViJtZcCIguTk1sfAGH3Z1q14/2YO4
K1r8ulATH7qEU9y2KlvgOvUxEctRPrQ76mp1Ya8lznLK5fYrUPG3hXKhWcpG
3Hi7ItZvExXjl2U5BJZaIW3xrdaAYCo2UHu/9ORtQv8EK/rxbCoal/sHlx21
xtsTq/TjWql4aHTBQ1jeBiPzpMbrSPzIEdtstfOmDXoYV5JlDfjxYFGzrzXF
FnMDxGmFB/iRIhLSc9OBeH+31XSeS+dHU6uS0xHxtiiUdeZc1VviP/Jgndha
a4vj8oK7HKkCqH7gybHcH7ZY+kRuc8A6AZQq4D9+YoZ4z4/o8xjHBbD754aL
jnQm1rbFNJ2pEECmlus9bzUm/lzh55jDFsDSZ7SZPFMmWsnHxhRoC+JEL39b
kh0Tdz4oXyg5IoiNFFN3uf1MlBE12dJeIYj5d9fEmYUy8Up3cLjFlCAG+jMv
/UhkYsK1u4EMEMLtyhKKQneYyNi7PvFGrBAqJJq8OVzNxO7mbXt6PwnhA19W
gVETE087OW1drSGM+2XP70t9zcSHVWWv2sKEUe32x3WdBLO0A23n3wvj1dK4
N9rPmTigSG0V0BZB51FW0VwDE/8ZfLhnHy+CFcWq+g+qmLh04e1rM44I1gw9
8rlUxMQLOuYbrHaJorvKrw2Ot5i40uETjfRCFDeK+qRnpDDRxMP6org5DV3c
RIIqY5n4pMDaxqyGhtSrdXlPIoj9XeeJHTQXw7+/dk2/JfYrrO6rV/FKDEs/
HjvSGsTEfTvoSic8FmEd86dM9WEmGloeuXRAQBwllcxlAr2YeKD4aeK1anHs
f2Lx6Ddxfps3NTf9MafjCQMpm7m9TPwfeXUQ0Q==
      "]]}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0.5549813482724425, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {
     Charting`ScaledTicks[{Log, Exp}, {Log, Exp}, "Nice", WorkingPrecision -> 
      15.954589770191003`, RotateLabel -> 0], 
     Charting`ScaledFrameTicks[{Log, Exp}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageMargins->0.,
  ImageSize->Automatic,
  ImageSizeRaw->Automatic,
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05], 
    "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Exp[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Exp[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0.5549813482724425, 4.060443010546419}, {-1.0285444100832422`, 
   53.59271965437645}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->FrontEndValueCache[{
     Charting`ScaledTicks[{Log, Exp}, {Log, Exp}, "Nice", WorkingPrecision -> 
      15.954589770191003`, RotateLabel -> 0], 
     Automatic}, {{{0.6931471805599453, 
       FormBox["2", TraditionalForm], {0.01, 0.}}, {1.6094379124341003`, 
       FormBox["5", TraditionalForm], {0.01, 0.}}, {2.302585092994046, 
       FormBox["10", TraditionalForm], {0.01, 0.}}, {2.995732273553991, 
       FormBox["20", TraditionalForm], {0.01, 0.}}, {3.912023005428146, 
       FormBox["50", TraditionalForm], {0.01, 0.}}, {0., 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      0.4054651081081644, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      1.0986122886681098`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      1.3862943611198906`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      1.791759469228055, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      1.9459101490553132`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      2.0794415416798357`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      2.1972245773362196`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      2.70805020110221, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      3.4011973816621555`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      3.6888794541139363`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      4.0943445622221, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      4.248495242049359, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      4.382026634673881, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      4.499809670330265, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      4.605170185988092, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}}, 
     Automatic}]]], "Output",
 CellChangeTimes->{
  3.8872959908418922`*^9, 3.8872961121840878`*^9, 3.887296269659247*^9, 
   3.8872967812364798`*^9, {3.887297348720624*^9, 3.887297371786809*^9}, 
   3.887297447984933*^9, 3.8872977809598427`*^9, 3.887298120285561*^9, 
   3.887300396712974*^9, 3.887479986477656*^9},
 CellLabel->
  "Out[475]=",ExpressionUUID->"9cd2fc45-8323-4c80-9822-9fdcd95d769f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"initial", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"lmbest", "[", "\"\<ParameterTableEntries\>\"", "]"}], "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", "1"}], "]"}], "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"lmbest", "[", "\"\<ParameterTableEntries\>\"", "]"}], "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", "1"}], "]"}], "]"}], "[", 
      RowBox[{"[", "2", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"lmbest", "[", "\"\<ParameterTableEntries\>\"", "]"}], "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", "1"}], "]"}], "]"}], "[", 
      RowBox[{"[", "3", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"lmbest", "[", "\"\<ParameterTableEntries\>\"", "]"}], "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", "1"}], "]"}], "]"}], "[", 
      RowBox[{"[", "4", "]"}], "]"}], ",", "0", ",", "0", ",", "Pbest"}], 
    "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"solbest", "=", 
  RowBox[{"NMinimize", "[", 
   RowBox[{
    RowBox[{"\[Chi]2fast", "[", 
     RowBox[{
     "\[Tau]", ",", "P", ",", "\[Alpha]", ",", "\[Beta]", ",", "\[Alpha]f", 
      ",", "\[Beta]f", ",", "Pslowbest", ",", "Pttvfast", ",", "input"}], 
     "]"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "\[Tau]", ",", "P", ",", "\[Alpha]", ",", "\[Beta]", ",", "\[Alpha]f", 
      ",", "\[Beta]f", ",", "Pttvfast"}], "}"}], ",", 
    RowBox[{"Method", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<NelderMead\>\"", ",", 
       RowBox[{"\"\<InitialPoints\>\"", "\[Rule]", 
        RowBox[{"{", "initial", "}"}]}]}], "}"}]}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.8872974139650593`*^9, 3.887297422683807*^9}},
 CellLabel->
  "In[476]:=",ExpressionUUID->"4ccbb8ac-0682-4f42-af41-4d78fa06aed2"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.016392748537980725`", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Tau]", "\[Rule]", "277.5132992626631`"}], ",", 
     RowBox[{"P", "\[Rule]", "160.88260058540416`"}], ",", 
     RowBox[{"\[Alpha]", "\[Rule]", "0.00400570503903165`"}], ",", 
     RowBox[{"\[Beta]", "\[Rule]", 
      RowBox[{"-", "0.006936351975393485`"}]}], ",", 
     RowBox[{"\[Alpha]f", "\[Rule]", 
      RowBox[{"-", "0.004697997432047437`"}]}], ",", 
     RowBox[{"\[Beta]f", "\[Rule]", 
      RowBox[{"-", "0.0007253529004110185`"}]}], ",", 
     RowBox[{"Pttvfast", "\[Rule]", "2.580196814600822`"}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.88729742386405*^9, {3.88729745644763*^9, 3.8872974592522383`*^9}, 
   3.8872977830428057`*^9, 3.8872981204161863`*^9, 3.8873003968690023`*^9, 
   3.8874799865620947`*^9},
 CellLabel->
  "Out[477]=",ExpressionUUID->"d09246cf-a415-484a-bf46-9b8d914125dc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"solbest", "[", 
    RowBox[{"[", "2", "]"}], "]"}], "[", 
   RowBox[{"[", 
    RowBox[{"All", ",", "2"}], "]"}], "]"}], "[", 
  RowBox[{"[", "1", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.887297522377303*^9, 3.8872975319397984`*^9}, 
   3.8872975832407103`*^9},
 CellLabel->
  "In[478]:=",ExpressionUUID->"abedd256-efd3-40e5-997f-41fd1d3c6519"],

Cell[BoxData["277.5132992626631`"], "Output",
 CellChangeTimes->{{3.887297523169148*^9, 3.887297532471923*^9}, 
   3.887297583381432*^9, 3.887297785983488*^9, 3.887298120465701*^9, 
   3.88730039688728*^9, 3.887479986566757*^9},
 CellLabel->
  "Out[478]=",ExpressionUUID->"8a81195c-a0a4-43af-9126-c42812ba59cb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"\"\<Looks a bit funky because of the new linear ephemeris \
picked\>\"", ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"times", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"input", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
       RowBox[{
        RowBox[{"input", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "2"}], "]"}], "]"}], "-", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"solbest", "[", 
             RowBox[{"[", "2", "]"}], "]"}], "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", "2"}], "]"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], "+", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"solbest", "[", 
              RowBox[{"[", "2", "]"}], "]"}], "[", 
             RowBox[{"[", 
              RowBox[{"All", ",", "2"}], "]"}], "]"}], "[", 
            RowBox[{"[", "2", "]"}], "]"}], "*", 
           RowBox[{"input", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "1"}], "]"}], "]"}]}]}], ")"}]}], ",", 
       RowBox[{"input", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "3"}], "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "input", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"ErrorListPlot", "[", 
    RowBox[{"times", ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Red"}]}], "]"}], ",", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"fnfast", "[", 
      RowBox[{"0", ",", "0", ",", 
       RowBox[{
        RowBox[{
         RowBox[{"solbest", "[", 
          RowBox[{"[", "2", "]"}], "]"}], "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "2"}], "]"}], "]"}], "[", 
        RowBox[{"[", "3", "]"}], "]"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"solbest", "[", 
          RowBox[{"[", "2", "]"}], "]"}], "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "2"}], "]"}], "]"}], "[", 
        RowBox[{"[", "4", "]"}], "]"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"solbest", "[", 
          RowBox[{"[", "2", "]"}], "]"}], "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "2"}], "]"}], "]"}], "[", 
        RowBox[{"[", "5", "]"}], "]"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"solbest", "[", 
          RowBox[{"[", "2", "]"}], "]"}], "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "2"}], "]"}], "]"}], "[", 
        RowBox[{"[", "6", "]"}], "]"}], ",", "Pslowbest", ",", 
       RowBox[{
        RowBox[{
         RowBox[{"solbest", "[", 
          RowBox[{"[", "2", "]"}], "]"}], "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "2"}], "]"}], "]"}], "[", 
        RowBox[{"[", "7", "]"}], "]"}], ",", "t"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "30"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Red"}]}], "]"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.887295995551343*^9, 3.887296197493265*^9}, {
  3.887297466716234*^9, 3.887297467165554*^9}, {3.887297504371264*^9, 
  3.887297591464058*^9}, {3.8872979138271*^9, 3.887297934413521*^9}, {
  3.8872981137512712`*^9, 3.887298120514863*^9}},
 CellLabel->
  "In[479]:=",ExpressionUUID->"cdbedc6a-2661-4bab-aa82-8b251d4e62d4"],

Cell[BoxData[
 GraphicsBox[{{{}, 
    {RGBColor[1, 0, 0], PointSize[0.012833333333333334`], AbsoluteThickness[
     1.6], PointBox[{{0., -0.007667876783102656}, {
      1., -0.008152388757309836}, {3., -0.006497097045553346}, {4., 
      0.002056100200320543}, {5., 0.003132281898160727}, {6., 
      0.000090733514753083}, {7., 0.010353853587730555`}, {8., 
      0.0035031129145863815`}, {
      29., -0.003014261902535509}}], {{
       LineBox[{{0., -0.007273204679102656}, {0., -0.008062548887102656}}], 
       LineBox[{
        Offset[{1.5, 0}, {0., -0.007273204679102656}], 
         Offset[{-1.5, 0}, {0., -0.007273204679102656}]}], 
       LineBox[{
        Offset[{1.5, 0}, {0., -0.008062548887102656}], 
         Offset[{-1.5, 0}, {0., -0.008062548887102656}]}]}, {
       LineBox[{{1., -0.007715619599309836}, {1., -0.008589157915309837}}], 
       LineBox[{
        Offset[{1.5, 0}, {1., -0.007715619599309836}], 
         Offset[{-1.5, 0}, {1., -0.007715619599309836}]}], 
       LineBox[{
        Offset[{1.5, 0}, {1., -0.008589157915309837}], 
         Offset[{-1.5, 0}, {1., -0.008589157915309837}]}]}, {
       LineBox[{{3., -0.006028137181553346}, {3., -0.006966056909553346}}], 
       LineBox[{
        Offset[{1.5, 0}, {3., -0.006028137181553346}], 
         Offset[{-1.5, 0}, {3., -0.006028137181553346}]}], 
       LineBox[{
        Offset[{1.5, 0}, {3., -0.006966056909553346}], 
         Offset[{-1.5, 0}, {3., -0.006966056909553346}]}]}, {
       LineBox[{{4., 0.0024568181633205432`}, {4., 0.0016553822373205432`}}], 
       LineBox[{
        Offset[{1.5, 0}, {4., 0.0024568181633205432`}], 
         Offset[{-1.5, 0}, {4., 0.0024568181633205432`}]}], 
       LineBox[{
        Offset[{1.5, 0}, {4., 0.0016553822373205432`}], 
         Offset[{-1.5, 0}, {4., 0.0016553822373205432`}]}]}, {
       LineBox[{{5., 0.0035533846061607272`}, {5., 0.0027111791901607268`}}], 
       LineBox[{
        Offset[{1.5, 0}, {5., 0.0035533846061607272`}], 
         Offset[{-1.5, 0}, {5., 0.0035533846061607272`}]}], 
       LineBox[{
        Offset[{1.5, 0}, {5., 0.0027111791901607268`}], 
         Offset[{-1.5, 0}, {5., 0.0027111791901607268`}]}]}, {
       LineBox[{{6., 0.000455511102753083}, {6., -0.000274044073246917}}], 
       LineBox[{
        Offset[{1.5, 0}, {6., 0.000455511102753083}], 
         Offset[{-1.5, 0}, {6., 0.000455511102753083}]}], 
       LineBox[{
        Offset[{1.5, 0}, {6., -0.000274044073246917}], 
         Offset[{-1.5, 0}, {6., -0.000274044073246917}]}]}, {
       LineBox[{{7., 0.010774418576730555`}, {7., 0.009933288598730555}}], 
       LineBox[{
        Offset[{1.5, 0}, {7., 0.010774418576730555`}], 
         Offset[{-1.5, 0}, {7., 0.010774418576730555`}]}], 
       LineBox[{
        Offset[{1.5, 0}, {7., 0.009933288598730555}], 
         Offset[{-1.5, 0}, {7., 0.009933288598730555}]}]}, {
       LineBox[{{8., 0.0038686247345863815`}, {8., 0.0031376010945863815`}}], 
       LineBox[{
        Offset[{1.5, 0}, {8., 0.0038686247345863815`}], 
         Offset[{-1.5, 0}, {8., 0.0038686247345863815`}]}], 
       LineBox[{
        Offset[{1.5, 0}, {8., 0.0031376010945863815`}], 
         Offset[{-1.5, 0}, {8., 0.0031376010945863815`}]}]}, {
       LineBox[{{29., 0.002879039716464491}, {29., -0.00890756352153551}}], 
       LineBox[{
        Offset[{1.5, 0}, {29., 0.002879039716464491}], 
         Offset[{-1.5, 0}, {29., 0.002879039716464491}]}], 
       LineBox[{
        Offset[{1.5, 0}, {29., -0.00890756352153551}], 
         Offset[{-1.5, 0}, {
          29., -0.00890756352153551}]}]}}}, {{}, {}}}, {{{}, {}, 
     TagBox[
      {RGBColor[1, 0, 0], AbsoluteThickness[1.6], Opacity[1.], 
       LineBox[CompressedData["
1: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
8k89O+9L7Qc3G4MJLwm87sEhIdcXAT9jJLd88pdAyYP1y5G7IiHPj1VFMEoC
uXckKwiwRUG3yafME3kS+Pie+Kuhp9Ggzp2umtgsgQ9lLWV3pMcDzbHlh6Wt
EpiVsNM2Yj0e+rYEOLbekUCbb5LXguMSIHDZKnv+kQQytM9VW0YkQvWQ9Aff
9xL47PuFkreBycBf2ZNjs0US/0mQOX+1pMG4wF6RCGZJPCjnlUhZSIOWoubm
wm2SKP7UVktXLR3MM8o+PhOQxJdC/rvLrqVDnneQup6SJL7f1R5kT71/VxU5
R5RtJVGfWalHKTELfl8QSt/hKIk2c4UqDC1ZsMQhI73bVRK1ZGzGZSazYHZx
d4ChvyRyXnGSlrSi/v/veP52TJZEr7Zgr90iOfBZOeScW4YkXpf/y5BrmgMf
K+N0fHIlkfX43ztjiTnwNvN4RvhJSZT+s0O+6V0OPDO5zZ5XI4mCGa+0JzJy
4cnde83Hr0jiQDXxcu1KLjxUfW5z6rokOp448nD2VS508Xwpq2iXRJ8xT7cj
InlwJ3t6b3WXJLakXL/TC3nQ9md5tP6BJJ6jmflM75EHLR+2yt16QfUryfnF
vYt5cP0Q37OO15Lo79XboHMvDxoI8eDud5J4gWM2I3QkDy5f0rjR+0US90A8
zPDmwyU+sHv1TRIV3+rfoKjkQ1XuwdW305JYX3xut6hRPpQFusDXZUlc5mdr
Hg/Ph7Of/L5+X5PEo7c42tqz86HEPDJ75p8kVvAc2lQszYeT95LlF+mlcKfn
Mtvu+nw4sSOvd4VFCu/0eVeNtOXDsZrikE12KXzBlFQn9CQf8gQucNHzSmGL
xdiB6YF8yM6vvcmyXQqzlg8Pm33Oh4y/zfYcYlL4hfxrwuBHPqQGd67xSknh
7wO7VZ/O50PS58cXhOSlUNYp68qnlXyIt3yFJGUpdNxYSU/bzIeYBx/GZNSl
0Cf9Dm8z3VGI3PktR1FTCr/Zb/kTwnAUwmrnFNR0pHBvO3mhnfEohGz/+3yX
nhRaFLTSF1Nx4DGGMB0jKZzKt/P4Q38U/DY4ePRNpPBp+afIKdqj4BMq1Lrf
QgpNU9XfBW7kg+cX6cOHbKUQz2m5Jv3JBzdr1XUrRymcITXziM7lg/Oj3ZUO
rlJIl8WrZv49Hxw1DfVdvKRQQMxLnvdTPtjXm014+kuhh8FSRfCrfLARPpzn
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
/EsOt9N6+B+/nwOtEanbNpbksKk+PtDtYw7k35QxJq3JIe2Dyk9fl3JARSvi
gQ+9PBqdaREfl8gFmgRBmqMs8iiwShPruCsXBu506TSyy6OtabBZ6MFcuLzh
Fd/PI49HhrbPiDnlQhywti4KyqPsqd6X3oG5YJLevMAvJo9vZiPrMSEXxB7Y
q2pLySPh1uLZkJsLc/Sbgc7y8nj/+CHxy6dy4YFRdV2asjymMFdrKFbkwpk8
44lL6vL4qYhXY3dtLvg9m5N4oimPgw+dv724lgt72M66TOnIY+qOZdPvN3OB
3Wzv+W368tj8yPZiZnsujBaOvaPsl8fC0H2O/3Xmwo1X+bw2pvL4ncQtCV25
kMNDsYy1lMfrU49GnajYwfbt8TI7eVy1tLr9m8onn016dtdJHsOfttBwdOTC
xpAk0xc3eXQ2ZbSqvpUL/UJPDeh95JFdoCqh9XouXDwSmiYXKI8mCRxZ++py
IaqC765xmDwm9Yi1WFbmwv7RO6vB0fJ47cjTjA8luSAk6bHrZII8St2VvzaW
lws/PZkjb6ZS/f7oIBuYmAuzFYZ3iSx5fP/R8UBnUC78Gk5j6s2Xx977HawX
jlD9471r+faEPB7N+PSH3SQXFsxXz385JY/uqvZPebRyYfHozm8/S+WxY6g+
vFEqF5YehVNWLsijzPl1/pFtufBnz9RD9jp5ROOC39tGcmAlRpZDqFEevelt
0rkf5sBas8dhmRZ5HOv0r2+ry4F1uQ8zezrlcQVpqn9T642O9zm/f788TixJ
/7gwmQ305szuUW/k8anG63Luh9nAcNTwaup7eRyO23Fyf0U2MNPchTPj1PW9
lOVnMM8G9p+Nfg9W5KnvcQv7IxezgFNuqqVvQx5ncpyOu0ZlAZeH7MYwnQJO
DTerHtqXBbxDFSfn2BTwaTz31L+xTNj+sLBDVEIB057hVBRfJgj966VXkFXA
+LgmgaTPGSCizWyuoaiA+9QLhv+rywCxprQx450K6J3HTXhrZYB0eThb3EEF
/FRtQqkwSwdKlLXL63AFfFSxVmrYngJG0gJ0ufcV8HLuQaWfETHww2N/3Z4n
CijrVUK68jsaCv6LNZvrVcCswrad1xKiYUBsqOzwGwV8y2KWdC8zCty2n9uh
NKmAp3IrjlWcj4B4dmHvV9vIeGvHkeScj8EgcsiENYebjPqh/kxPVoOg+1hi
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
        "]]},
      Annotation[#, "Charting`Private`Tag$397786#1"]& ]}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageMargins->0.,
  ImageSize->Automatic,
  ImageSizeRaw->Automatic,
  Method->{
   "OptimizePlotMarkers" -> False, "AxisPadding" -> Scaled[0.02], 
    "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05], 
    "OptimizePlotMarkers" -> False, "OptimizePlotMarkers" -> False, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 29.}, {-0.008152388757309836, 0.010353853587730555`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.887296097154833*^9, 3.887296113397241*^9}, {
   3.887296166465726*^9, 3.887296198999578*^9}, {3.887296265231646*^9, 
   3.887296271708311*^9}, {3.887297557823475*^9, 3.887297594901773*^9}, 
   3.887297788588505*^9, 3.887297934982616*^9, 3.887298120839957*^9, 
   3.887300397472046*^9, 3.8874799866186647`*^9},
 CellLabel->
  "Out[481]=",ExpressionUUID->"85bcc185-9816-4c94-926e-6d4b3aa89264"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"\"\<Same plot but now forcing it onto the original Kepler truncated \
lin ephemeris\>\"", ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"times", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"input", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
       RowBox[{
        RowBox[{"input", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "2"}], "]"}], "]"}], "-", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
            "lmbesttrunc", "[", "\"\<ParameterTableEntries\>\"", "]"}], "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", "1"}], "]"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], "+", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
             "lmbesttrunc", "[", "\"\<ParameterTableEntries\>\"", "]"}], "[", 
             RowBox[{"[", 
              RowBox[{"All", ",", "1"}], "]"}], "]"}], "[", 
            RowBox[{"[", "2", "]"}], "]"}], "*", 
           RowBox[{"input", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "1"}], "]"}], "]"}]}]}], ")"}]}], ",", 
       RowBox[{"input", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "3"}], "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "input", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"ErrorListPlot", "[", 
    RowBox[{"times", ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Black"}]}], "]"}], ",", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"fnfast", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"solbest", "[", 
           RowBox[{"[", "2", "]"}], "]"}], "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "2"}], "]"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}], "-", 
        RowBox[{
         RowBox[{
          RowBox[{"lmbesttrunc", "[", "\"\<ParameterTableEntries\>\"", "]"}], 
          "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "1"}], "]"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"solbest", "[", 
           RowBox[{"[", "2", "]"}], "]"}], "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "2"}], "]"}], "]"}], "[", 
         RowBox[{"[", "2", "]"}], "]"}], "-", 
        RowBox[{
         RowBox[{
          RowBox[{"lmbesttrunc", "[", "\"\<ParameterTableEntries\>\"", "]"}], 
          "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "1"}], "]"}], "]"}], "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"solbest", "[", 
          RowBox[{"[", "2", "]"}], "]"}], "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "2"}], "]"}], "]"}], "[", 
        RowBox[{"[", "3", "]"}], "]"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"solbest", "[", 
          RowBox[{"[", "2", "]"}], "]"}], "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "2"}], "]"}], "]"}], "[", 
        RowBox[{"[", "4", "]"}], "]"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"solbest", "[", 
          RowBox[{"[", "2", "]"}], "]"}], "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "2"}], "]"}], "]"}], "[", 
        RowBox[{"[", "5", "]"}], "]"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"solbest", "[", 
          RowBox[{"[", "2", "]"}], "]"}], "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "2"}], "]"}], "]"}], "[", 
        RowBox[{"[", "6", "]"}], "]"}], ",", "Pslowbest", ",", 
       RowBox[{
        RowBox[{
         RowBox[{"solbest", "[", 
          RowBox[{"[", "2", "]"}], "]"}], "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "2"}], "]"}], "]"}], "[", 
        RowBox[{"[", "7", "]"}], "]"}], ",", "t"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "30"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Red"}]}], "]"}], ",", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"lmbest", "[", "\"\<ParameterTableEntries\>\"", "]"}], "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "1"}], "]"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}], "-", 
        RowBox[{
         RowBox[{
          RowBox[{"lmbesttrunc", "[", "\"\<ParameterTableEntries\>\"", "]"}], 
          "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "1"}], "]"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ")"}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"lmbest", "[", "\"\<ParameterTableEntries\>\"", "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "1"}], "]"}], "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}], "-", 
         RowBox[{
          RowBox[{
           RowBox[{"lmbesttrunc", "[", "\"\<ParameterTableEntries\>\"", "]"}],
            "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "1"}], "]"}], "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], ")"}], " ", "t"}], "+", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"lmbest", "[", "\"\<ParameterTableEntries\>\"", "]"}], "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "1"}], "]"}], "]"}], "[", 
        RowBox[{"[", "3", "]"}], "]"}], " ", 
       RowBox[{"Sin", "[", 
        FractionBox[
         RowBox[{"2", "\[Pi]", " ", "t"}], "Pbest"], "]"}]}], "+", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"lmbest", "[", "\"\<ParameterTableEntries\>\"", "]"}], "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "1"}], "]"}], "]"}], "[", 
        RowBox[{"[", "4", "]"}], "]"}], " ", 
       RowBox[{"Cos", "[", 
        FractionBox[
         RowBox[{"2", "\[Pi]", " ", "t"}], "Pbest"], "]"}]}]}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "30"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Blue"}]}], "]"}], ",", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"lmbesttrunc", "[", "\"\<ParameterTableEntries\>\"", "]"}], 
         "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "1"}], "]"}], "]"}], "[", 
        RowBox[{"[", "3", "]"}], "]"}], " ", 
       RowBox[{"Sin", "[", 
        FractionBox[
         RowBox[{"2", "\[Pi]", " ", "t"}], "Pbesttrunc"], "]"}]}], "+", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"lmbesttrunc", "[", "\"\<ParameterTableEntries\>\"", "]"}], 
         "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "1"}], "]"}], "]"}], "[", 
        RowBox[{"[", "4", "]"}], "]"}], " ", 
       RowBox[{"Cos", "[", 
        FractionBox[
         RowBox[{"2", "\[Pi]", " ", "t"}], "Pbesttrunc"], "]"}]}]}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "30"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Black"}]}], "]"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.887297798587103*^9, 3.8872978681391783`*^9}, {
  3.887297911012443*^9, 3.8872979114122753`*^9}, {3.88729796464669*^9, 
  3.887298031195571*^9}, {3.887298126510229*^9, 3.8872981477929363`*^9}},
 CellLabel->
  "In[482]:=",ExpressionUUID->"7d98ec8a-fa3e-4213-9d6f-6500b0f20e7a"],

Cell[BoxData[
 GraphicsBox[{{{}, 
    {GrayLevel[0], PointSize[0.012833333333333334`], AbsoluteThickness[1.6], 
     PointBox[{{0., -0.00022417883144498774`}, {1., -0.002571086039495185}, {
      3., -0.004640584795538416}, {4., 0.002050217216378769}, {5., 
      0.001264003680262249}, {6., -0.0036399399366473517`}, {7., 
      0.004760784902373416}, {8., -0.003952351004727461}, {
      29., -0.04958002573221165}}], {{
       LineBox[{{0., 0.00017049327255501227`}, {0., -0.0006188509354449877}}],
        LineBox[{
        Offset[{1.5, 0}, {0., 0.00017049327255501227`}], 
         Offset[{-1.5, 0}, {0., 0.00017049327255501227`}]}], 
       LineBox[{
        Offset[{1.5, 0}, {0., -0.0006188509354449877}], 
         Offset[{-1.5, 0}, {0., -0.0006188509354449877}]}]}, {
       LineBox[{{1., -0.0021343168814951853`}, {1., -0.003007855197495185}}], 
       LineBox[{
        Offset[{1.5, 0}, {1., -0.0021343168814951853`}], 
         Offset[{-1.5, 0}, {1., -0.0021343168814951853`}]}], 
       LineBox[{
        Offset[{1.5, 0}, {1., -0.003007855197495185}], 
         Offset[{-1.5, 0}, {1., -0.003007855197495185}]}]}, {
       LineBox[{{3., -0.004171624931538416}, {3., -0.005109544659538416}}], 
       LineBox[{
        Offset[{1.5, 0}, {3., -0.004171624931538416}], 
         Offset[{-1.5, 0}, {3., -0.004171624931538416}]}], 
       LineBox[{
        Offset[{1.5, 0}, {3., -0.005109544659538416}], 
         Offset[{-1.5, 0}, {3., -0.005109544659538416}]}]}, {
       LineBox[{{4., 0.0024509351793787692`}, {4., 0.0016494992533787692`}}], 
       LineBox[{
        Offset[{1.5, 0}, {4., 0.0024509351793787692`}], 
         Offset[{-1.5, 0}, {4., 0.0024509351793787692`}]}], 
       LineBox[{
        Offset[{1.5, 0}, {4., 0.0016494992533787692`}], 
         Offset[{-1.5, 0}, {4., 0.0016494992533787692`}]}]}, {
       LineBox[{{5., 0.001685106388262249}, {5., 0.000842900972262249}}], 
       LineBox[{
        Offset[{1.5, 0}, {5., 0.001685106388262249}], 
         Offset[{-1.5, 0}, {5., 0.001685106388262249}]}], 
       LineBox[{
        Offset[{1.5, 0}, {5., 0.000842900972262249}], 
         Offset[{-1.5, 0}, {5., 0.000842900972262249}]}]}, {
       LineBox[{{6., -0.0032751623486473517`}, {6., -0.004004717524647351}}], 
       LineBox[{
        Offset[{1.5, 0}, {6., -0.0032751623486473517`}], 
         Offset[{-1.5, 0}, {6., -0.0032751623486473517`}]}], 
       LineBox[{
        Offset[{1.5, 0}, {6., -0.004004717524647351}], 
         Offset[{-1.5, 0}, {6., -0.004004717524647351}]}]}, {
       LineBox[{{7., 0.005181349891373416}, {7., 0.004340219913373416}}], 
       LineBox[{
        Offset[{1.5, 0}, {7., 0.005181349891373416}], 
         Offset[{-1.5, 0}, {7., 0.005181349891373416}]}], 
       LineBox[{
        Offset[{1.5, 0}, {7., 0.004340219913373416}], 
         Offset[{-1.5, 0}, {7., 0.004340219913373416}]}]}, {
       LineBox[{{8., -0.0035868391847274613`}, {8., -0.004317862824727461}}], 
       LineBox[{
        Offset[{1.5, 0}, {8., -0.0035868391847274613`}], 
         Offset[{-1.5, 0}, {8., -0.0035868391847274613`}]}], 
       LineBox[{
        Offset[{1.5, 0}, {8., -0.004317862824727461}], 
         Offset[{-1.5, 0}, {8., -0.004317862824727461}]}]}, {
       LineBox[{{29., -0.04368672411321165}, {29., -0.05547332735121165}}], 
       LineBox[{
        Offset[{1.5, 0}, {29., -0.04368672411321165}], 
         Offset[{-1.5, 0}, {29., -0.04368672411321165}]}], 
       LineBox[{
        Offset[{1.5, 0}, {29., -0.05547332735121165}], 
         Offset[{-1.5, 0}, {
          29., -0.05547332735121165}]}]}}}, {{}, {}}}, {{{}, {}, 
     TagBox[
      {RGBColor[1, 0, 0], AbsoluteThickness[1.6], Opacity[1.], 
       LineBox[CompressedData["
1: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
jw9bUl+IYVCM/wP1K9yh
        "]]},
      Annotation[#, "Charting`Private`Tag$398006#1"]& ]}, {}}, {{{}, {}, 
     TagBox[
      {RGBColor[0, 0, 1], AbsoluteThickness[1.6], Opacity[1.], 
       LineBox[CompressedData["
1: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
3DUAlg==
        "]]},
      Annotation[#, "Charting`Private`Tag$406979#1"]& ]}, {}}, {{{}, {}, 
     TagBox[
      {GrayLevel[0], AbsoluteThickness[1.6], Opacity[1.], 
       LineBox[CompressedData["
1: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
SBsiYtlPBa3T/fW8qb0rXBuUd0k/uKNFw8+71O4OULQhUeVsr4EH/Xx+XXD5
1yFt0HRa+zmRTsPv3rMUrB/VBreohrAnN2m4v484yZOoDbS+s/pt72l48Mvw
Edk0bbjUtX7p0wINjw3Zhuuc1oYWneEoDiECT462eJhka0MJh9Wn/ToEnv2u
buOQrw1PXPeeumRJ99HPiyjgojb4h6eV/PMh8N+ZzTqHyuj5en6v9oohMMP8
Ifn0Km3wes9/9WkqgVmXRwUKarXBpuOrolYe3WOr9iy1ddrwfN9j9gt07/Az
tC0+bNCG38Fb8D+6h0SZtSZePtCG6RaQ96J7Spqt5NPnZm2oEyZn0P+fYYUt
HF0/H2vD9XdiD4XpcVXeuObVZ9rwU/nOQgS9v5bgeB1Xtza0a0st4WIC64k6
XpJ+qw08n1784M0lsJFke452rzawlu+l+qbQPaSgOPjjszZs5GY+miAIfEo9
Xb16iJ5v4PHGXl8Ck7dOxHmNaUPpc6l+zf0E7jeyfCb6Qxtu/lnvn9UncKLJ
DYH3v+j1sR7plZekr8eS2/fsH20wM7A1e75Bw7Gu7/5tWtWGFMU/Pw9jGs4m
Fyl6MZDhQ+K9ltPFNOyvZ2XVxEiGj2ZLGvKHaJjTuK7w0GYy/HQubZ2VpdcL
eeF37GSQ1YmW3TpHxQ2mPOPaW8hw9z+xUp4nVOxmRd06yUuGM9+yf9e7U7GW
rbybhQAZhMmVhSmKVMzo8D6xWogMK0MmS5w/Kfiqm36PlzgZfowKDHpQKXg5
dCXkvQIZrq+A4rvnUbg78lo2WZkMrW+C+SoNonA51f3+WVUy9MgM3wqpiMQW
R1qY9mqSgatWfw8pPAJfOJlU1mxAhqLvlW2v3obisEzdp2LbyaB1B5uVyYfi
XTmjPw/vIMPqPV4VAUoI/lZgvl0HyDDi+WNw36ZgrFfD/uHyPjIwl0m1VGz4
43dPc9mzPchgShYo/crijrmZKmN8k8lA+iZ4LLaUH7GuYIffqWT4mpJg4j+s
itan/9NNyiBDwCfVcj5DPTTzWex3eSYZ+E4vhXIM7kZvGnIjv14gw5rFO/aX
pXYozy8pyPs6GbziPL75hnuj0y6XzGfqyLB+PTDsT6EPSrZpUUyoJ8P2/W6S
F4/4IsJoZaTsHhm61h0vntL1R478VO9BTIYtg+5qhglByJote1dUOxkyO/mn
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
8FWELq6SPpRdSsbz8LmpmwSBaK+ShWsvsKBFa2UUX5tA947KetypYIHE3MGv
i40JtJmabrOtigXre6I39NqQfNIrb95dzYJ+L6cXRQEEsjtxEgVcY8GG1Dpz
m8ME+mSsSP13gwU6Ztzh3ySf+P/M0k69zYKybmmvYzkEGi9YqqJWy4IvdzP7
/pG8dNji9MLqeyyY/T5DwYnkJYlZy8U2PGDBWY99y0pJPjpRlT/WWseCzy8n
8zrKCKTqpNbv1sCCikB0d6iIQMUy596ONbLg2PpHikN5BNK7p/k89gkZb8uj
R+0ZJN8EFD9UfMaC6rBph/I4AhkvX32j9AUL4JrjL58QAjW3lJWz2liw8NHT
pSpuBNoTuS6vqZ3cf7K8vdacQO/WV6TZdbLgu45dpRXJk55vdWO+d7FA7eH9
8/2KBBpJrAqNfEdeL+aUfjjJRwc4hn4Le1hQzLllKtsuQuIDVxzze1lw+Znj
jktVIpSUQ9ut38eC0V5TfbtjIrTE7MbG+19ZIMi5Dar2IrSm7LZO7yALXss7
F0//IXlnL1eN+MGCM9o1o6ubhIg7/+7iOaMsOPLqtOuxE0K0w/P+lNYEC9q4
qVHiy4Woc8mG4Ru/WRD+enuVwXsBcqmv+7j5DwsU5GbN3DgjQMGrHjf6iLFB
TgqX/FokQP/attROzWaDRuazymPpQejY0eaq4/PY8ISRcWn9VCDK7X166pIU
G6hPj+cO1AYgXPDK/ecSNuhefj8hI+WHeszVnUKU2RBfWFsks9cXzfodYDut
wobYIuXZsmd90IZd83fMVWND4s5TqtGa3qhBjMNcuo4Ngf6r29zEPFCL61lJ
YyM2OBY0PKq0sUddq3wr0zzZsML+0hTDRAVPv7hRtsSHDf2qR5/YCXWw6sHZ
53P92NCymJHs/p6OHdrPZBUJ2PD63e67dqkbcE/s86hb4WzwMn2+9vwrC/z1
C82yJ4UNm1rVEpa7OmGJjCPbPdLZ4JawkXomzRmvQc82D2SwQbZvkVJJgAv2
zfLijWWzQX19cGj5Sjc8vDlXS+I8actM4XdOnlh27MvK5GI2+KZYCGtWe2GD
AqqKfBkbzu9xTF0y6IWFky0yqpfY0F1zLaDRxwePlc1M6N9kw1KRjsQChj/+
Yr2pIOE2G5bdf2sX1uaPO+ckb/lUwwaTEvp65YAAXOOsknPqPhuKZzacO30y
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
DA==
        "]]},
      Annotation[#, "Charting`Private`Tag$424862#1"]& ]}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> False, "AxisPadding" -> Scaled[0.02], 
    "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05], 
    "OptimizePlotMarkers" -> False, "OptimizePlotMarkers" -> False, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 29.}, {-0.04958002573221165, 0.004760784902373416}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.887297809960244*^9, 3.887297834744108*^9}, 
   3.887297869691023*^9, 3.8872979004116096`*^9, 3.887297939080708*^9, {
   3.887298013316565*^9, 3.887298035929681*^9}, 3.887298152347845*^9, 
   3.887300398715188*^9, 3.88747998854039*^9},
 CellLabel->
  "Out[484]=",ExpressionUUID->"0efe6d22-5760-4012-beba-b779eb958a21"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLogLinearPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "LSperiodogramtrunc", ",", "LSperiodogram", ",", "LSslowperiodogram"}], 
    "}"}], ",", 
   RowBox[{"Joined", "\[Rule]", "True"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Black", ",", "Blue", ",", "Red"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8872981619342747`*^9, 3.887298183545005*^9}},
 CellLabel->
  "In[485]:=",ExpressionUUID->"0d8adf99-7f1e-4fac-b365-17bd9475835e"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {GrayLevel[0], PointSize[0.0055000000000000005`], AbsoluteThickness[1.6], 
     LineBox[CompressedData["
1:eJwtkXswFAgcx9diOSl3jdflEUcym7odXKm0v5/3OXnsYj3CLNOuQodbaW3I
s5SjcjmVOs7mMaJRaOTVauXZKY9xLo+2YbzZ9chjl1w3c3985zOfvz5/fA1D
IuksIoFAcPyy/8irwoduuZOAyWduUp5ysKuL71y+PQkTV2hRyRUctCwPqAoK
nYKSkcr7u4s5mCJ7PhDTNwV0auHrhnwOUuSeaKxRp8En5YBpZQ4HD48Pmc9X
TEOVkXsnK5uDHxsraMG6M9DV35Gal8dBnRQdeWbWDOxE3DbxaPrSS89zXtmZ
gZNzzbv3acbgHou0ApOYWcDMnN9vNcYgla33WXF2Fkg9RKdU4UU83fVh4mHw
HNhfCqe2GV/C0mcJwbL3c1ChRKeo1nNxTP+CthljHoy2HE4EuvDwvETXjdo/
D9EbjEFR8WXkikQSpC+AfFr3hEVxPB6/XMy3618AVT3ONYlZAjZ6XelkMBZB
qciuP1Y/AR8Pk3MyhxdB5foDiPOOx7rSO0qrIWIwHVRatH3KQ1dJmi5/XgzW
X7dn5ppxcUDBMYhhLYEjSffml6UxWFJTtpiTKgFbmVY53I7G7ojaH/e+kcBI
ga9gXOECwnecPSKNJXjSe4gemHIOl9ffpysHL4F/acvW4gILax7tK75buQS8
b5mbFDUWcrvlDP6QLUFIYvXAtC8Ld+k2xR50WYZb+oIzhTpsfDxJItk/WIb4
5nbjgDI2+p+XaiuIl6Ft7KD93Wg2GpQ2bXHtVsDxbCz/ZwoLH1qf0qy9twK6
uzQvt2+GoPk9qrR7aQXYnh7v0shMbLmhldHnsgqmjscEMrY/pl5kK30oXYWI
0VWJdNALpxx+cP6K9AmYv7rWt267YxWf+FcY+xNUacXUm805YeRrm1n9zk8g
YbQeGwm0QfFx6WfbI2vAdDnn4+trhQFE90druWsgygqLbuVQ8MX9oZkzhHUQ
jPh1VKqYYHb2zN28C18c618XuRmg4phKcu/oOiRZcK1fvdqPiUfhrSVtA5I2
fkvqyzZGfeJCtKR9Awyu6blZ3TiMoRXVmcdsN4Eg7pYKBZZokbWwbiPYBGYP
7aM+9yR6t1tPnLaVgpVeQ+DOfhsciHJKze+QQllrfpSAZo9vDIWjlzxlINLQ
Vntn6YTC6+YdFuMyMAgd6WgROuOMuq8imbsFVj0amsqk0xg5nVjwcu82VJEa
6BFKbsiXT0tnVW9DYU/AKXK/O2q3noi/7/8ZCv1edam/8EDy84a4BeUdiOpo
PMq7SENezvhVwssdOHvqT50DhnT0EoFJG5WAdcHM/aNNdOQ8PgnPigiImd8H
qbh64tBweU3zLjm02p0cO/TWExO37ZLieHKYVFlv85OTF2aq1W5kiOVQuVc5
yL7GCzW9axuehhPR984v3Tla3jjpGJI8JiaiJZ2sOx/tjYH9f/PJCfJIKDLK
WhF6Yw0x8aZEXQEf+KmWnNjDwAzJ8PZonQJ6HAorsaUx8IUPRf6bcEWsMY98
n5DF+P9fElrHOfzjIWTgvzkbFmQ=
      "]]}, 
    {RGBColor[0, 0, 1], PointSize[0.0055000000000000005`], AbsoluteThickness[
     1.6], LineBox[CompressedData["
1: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
/wHVIiF4
      "]]}, 
    {RGBColor[1, 0, 0], PointSize[0.0055000000000000005`], AbsoluteThickness[
     1.6], LineBox[CompressedData["
1:eJwVl3k4lN8XwGfG2EfGnq2GRJJ9bdE5kTBUkiKVRAkRohItSllCRCSlrFny
tURlS1OhXYoWLVKyM8YYe/R7f3/d5/N8zj33ufd533PPVfEIcDxIIZFIi8kk
0v9H7iVDsURmL3jur6LVjdrioEugKc+rF8LqywbOsm3xK8O7+GhkL3CWivoG
D9ui23pmikhWL9BytpuFDthiyvXHS+vre8ElzU6JPqWHGXuGT0d39MIX0pyh
RNVKfF8e9N1vshf8ohv/a1+qht2RAb5+Un1gE7RH0TxKCUecopyj9PrAbHvF
rvgySewU7mir3dwHXfIvXslsFECdt4voIof7gBWimSP0bQqQ52QeEtMHpFq3
0aDoPvBhuyfM5PdBxOW45zL2HUAzP2qQ8YzwIniB/2M7NIU47dv5i2DLFuEy
yQ4YtN5vrfOPYP1vDsKVP6E64/wSVeV+QL07LR4Fv0Ep20jeYG0/kKpcX1Xm
/YErAjF+brsITq46fjq5F1Yx1LYUnCDi/c7N1rMGQFjTlkdL6wdWzKO3D86O
Qmjsh9TEKsJf9CnwdODBzIrVvrpt/RCx0u5a1pVZCHqdWjQ81g+t7PzIDkEy
lp7MjX9OHwBGadyGtjkqlk88sWfpDoDD2ueFAtlCWLdmetnnLQMQgUNcn2BR
fCw8ZU87MgDuTUd7UFAMFc8r8rknDABHTGRRgJIYmj4POv+hZABYpMIAerEo
Lql8KHjgzQB0Bew+zeoSwpNp+1qlh4n4mfKrRar8uFYgRaFHdBAYEfdT+8dI
aP3QePlHrUEgGTEueJXPwF7vft0eu0HIiuxOi83gAuuraLiM3yBgfOPtprhB
+NDxzNor/v+cXnCK2w0ijrOfP5cMAssw8mSjwy/474THEd+3hN++7QVq/IZb
8+FblrAJnm9Z9PJ3D9zak1Y/vmgI8M6Gk8aawxCn1T4/qDsE7uquvIaLXHgT
o+NC3TYEWQOH3yjETkNUaqgkHh0Ch9JzwbdsSLhA8Qy5lTIE9D9nhkMi+TH8
3tnmpfeHiPNu71hsTUNnbyvHxk9D0H+0XqSfKYnByVIe8dNDQErSelKjK4ct
qiYbQhWGgWHN8+8sUcLoMwNrY9YRrLGrfo21Co6fc7td7zYMgTFtNBdrNVyX
0VAjc24YspKoHucMNVB6QvdrSu4wpDsv89/Ur4nKzzscTJuHwXt/FOvGplUY
UdR/hDQwDH9krF+IG+qgp3hK1KjoCLjMb3x5KFUXm9qUh6i6I/DlPpVsvUoP
Q7u6OOg4AtXa1hrZ3brYwrYbyT02Am/YvT2e6auw2GPIROf6CLS+fGbNVtbA
u+i/vKt+BMxU0gtFTy5FJbwjUds1AtPR58XqxWTRbyZtRz2VDRx+2/fBN8Vw
Qj/Ivm8FGyIK6+cGQziPX1plOq7dzAaiFJBYKzmPvMofN1UHsYEVyq2o0e17
LHG/geqeRvgL3nbv+8XwucaLAP06NsRoZdqFaDEw1dnZW7uLDUnToW+1ZZbh
ZsW125z4R2HPsZ8hT9M1MIx88/KdlaOgFMc48ElMD2/nUaLUHEbBRLPQQ/qB
Id5Vc7vVcmwUfO/XZEkvNsOqZhHMvzEK48+nVCxV16Bs/Zf2wiejIFhVyaLi
WpyUkHrR0TcKFbqzCeK8NWhw0NJSSZAD0ZYJQi1Oa1CJbvXYQ4ED37vlzFN9
VuOxOXISS5sDUX9e/udpYoZtdavZxhs4YCSfoyDBMsEAdrjUMycOxC+/NOwk
Zow/TVat8fbmgKPZj7MdGoZ4eEdU5vJTHCiJ6N8gr6yPNTtzTs4lciDkquou
5rw2Jv8IFR3MJTzPO6j3qSYGR/cljT3kQMzNkH3y1cvxtd99G8k3HEAX+p1W
QVW88+jaUfsuDnD4th1/WayMWeEmW7N4HLCx3UK5GrQYpRz1GYuExyA0Uf8I
O0wabRLUVqQpj0FhQUf+++cSWK9fWmxmMAZJOmu4h23puNcoeHhi0xjQOaGx
Ou/E8Vm7mmHL7jHost85rnyRjucUopqeBI7BC3XFl3EkSYw9HjTUenEMAi9F
DkoYSOOX2M6RuYwxaP24fj63XxZjJPtlLcuJ9VXsQvkG5DGU9KHiTtMYfJFd
vTeEo4Tf74mLanwj8ot2wbfapTiwjxnYyCHmU/TfqfOrILXwkN5ZAS7wsn8r
dXxSwU87km44K3HB3leg+JiFKt61N+XbYsAFvfu8x+obVLHyDqPWw4YLWUKx
4eSPKphB9ZFOcyN444SKtJAKLqMnHOoP4YJNcxhX/dNSDDQMEnGN48J0mVH+
cQ1lfBDls2Momwv9r+5WsYwVUHNyQ87Nai640zVWhhvJISlnk/2Rd1xIV5Pf
6ewkjUlh9uXuvVxoFV+fpfZYAoMValeFzHMhaaHT6K6mOA52JakUSY9DYLBz
mFa7KOZsOc75pzUO7odZOz8mCaNKwaO/oZbjwPG7EvzDTQg3dQTdld49DqzB
0VqKthBurdjn2XaU8DucjV99F0LuTkbC/UvjQC9ftYRhJYIWCmopdTnjQNpr
OhxnREOl5Ee/emqJ9Yp+1J0LXoSLxbX7jNrGgeFYLVzkScfegyVSRUPj8KLG
h8IJk0BP6fAOCyoPWGEOckMHJDGucbCEosyDpLqMcE9RKfyk50cdMObBiqZP
ivZuUnjM/6bL5BYehCZ4Zf52kkLIcFTT8uZBuZPxVRW2JGqSS/9En+PBF3VH
jyg9SXTOV5MXu0Hk/1S2YKcmgSTrZMu6Kh64pz7yefZaHDO7rPuTW3jgcPQG
NeyNCI5mK16+2s+DLkmXOEsjIWz0P9nAokxAl3T3VFc2P578Gcy/WHkC9BTu
lRRb8WHYj49jGaaEX6IjcciSjC4NRjJMxwnIcvq6hRP8D1QE+Kjq/hPAUmHr
/VogoczT3B26MRNAoh1hrOsl4XTMmTyv3Alg1A/5xXmSsURd+vKbhglweEYT
yAmk4OSMVOX+rxMQeNzrmReXDwtEjz5UnySYHFVJa+LH1t7TFkqSk0Ba8cz6
aoMgjq6eXbDQmQT82VdGuSeMfrbGN24wJyGQLl8mTty3GutUX6ofmgRW5tq2
ng4aWtkFr++JnIQsu0NZkc1iONBZVfU5i5jvbvLcZdki7M32GVh4NAnl8snm
Hb1iKHdN49bub5NAJzsX/JESwzNrH6SzpydB78XHWUqNKI6wtHOrZaeAFF6T
l8oWxih/ufhaoyngfBzKMmsXRDHtRPUJxylgvLkWX5jAj1X7vZg+QVNAj/nX
lgJ8WE6xaZdLmoIs5ffm9TQyvpPrzCeXTUFXoXilj8YCfMqeztdoIfKnluRX
fp2FFNID1qURIt/frQqfnafBsL+kT0tsGtzX6aUtuz8JN6blJGnaBCs2rKfP
ToCLCJ/5qs0EP4w2L1oyCX+twg4n+E8D61XI23WiU9CsWHdH7/I0kMZlslrT
p6He4NCCbBkRr7vtu2DKLNQeqonZ0DoNjIR7TsN1f8F4st6jYozg3XvWp7xf
AP3eqPJDUjPAchWkRDJJuPZ7UOZB4xkoP6B2srKfhLK+e/aUOM8ApzM8lKZP
xijSoIZ52Azg9HSXpyIZC/OaLeQzZ6DLqiETiklomDAytYFFeDvj+lNt/2Bz
Czejupvg3Rf9yV/ngd/cIeaM4CzgMupBqdQ5GLt/f3mq1iywGq/y39WbAa2J
Pb/ntxL+4UlP2vtJ+Ka337Q2hODj1Rs/XOZBZrFC4evrs8BoFPILPs6FTQFn
nho+noWuvkIpchwHtkWcX8r7Mwskra/sD6kjwM2P8lwkOgekE5cGJXwHQUr7
6foL+gQ3vhLqSe+D118e+Du7zEHEVnuPacMe+Ly9qCb2LOGZakWzO7uhInjp
jFLBHLA0u74Oqv4G37wDdKl3RLzbQ/8L1b8g86s013+K8ClKySJGv0EkoPS2
LuMv4PjG9ra73VC5RWulq+1fYJWZuObq90LtWPa90aOE19ELTf5I9JUpbF/u
zb8Q4a/27Wwh0RfoHkw78PwvZEVHi07v5UL7u/hLNlzCN5ypFRCfhLnGP2VZ
yvMQsaumst97FrJ9qs4H2M4T38c2kzCPf3BFpTfl4bF5cPhnRMoJoqCXAzs2
PGce9FxXBXm58yND6rFKw7t5yAqxLi7cJ4TR117qnp+fh0Cmg/AaO1H8PS+W
/UprAThqX8of/BXDxY1rTmW4LkB65IyS0wo6Wrd8/82LJTjPwfunjASamWZL
/qhZgC+Psi3SiXouvqrYa+cgwbTG103LJdFVf9rlgOI/CNRxfvLeQRLfbh6I
FNn8j+jPY5xbCTZ5+C7X/izh6dKrrNdJ4pan2ek69/4ByYkv8oyOJF6dbzxU
1UP411ce3LOSRDeruSVjNBLaBJfO+2dL4urTRWZuGiTMknKy0dovhfESrCfL
LAhmpiStzJXGqQ/zEhv3klCo6FGGZqQsnoizuf4klISM9iO+NxfL459z8123
rpKwPLNp9ZIQJTQw3JXQWU7Cws2dLNktDFxiNO0W+ZaEp7jfzbobVTFgX7BR
0iAJ35w2pI0lL8e1JfI0ISEyvsj8GReRtwLB6hU/ezkZq/8G2TV2auGOx2MH
rDaS0WEhkhSiqoueGf8lSxB1k67WfDFfQx+bLsszdp4nI6ew5nBHrgG+vPTq
hWwOGQ1eOm3izBhiWEX4MeenZFx5RGrRXxVj/KrBXa/UTUZ1C4XnKYtNME1Y
OciHSkGe5kDpbKcJXj914rKlOgXbNlWeEg43xYbLldvLbCj4wyktcHLSFGV3
3K+rOExBt6LUbNJ+M1wo6eVzSKRgfbL1ksFXZighPFKeWElBm2vdQYq2q/F1
9+uU418oWJjSu8JqbDXmt5x9J7JAwaTPnn0uX9agQP7Sn45qfMggB+Y2i6/D
Q2YpN3fY8aFr7vla+RxzrOjiWCsE82FViJtZcCIguTk1sfAGH3Z1q14/2YO4
K1r8ulATH7qEU9y2KlvgOvUxEctRPrQ76mp1Ya8lznLK5fYrUPG3hXKhWcpG
3Hi7ItZvExXjl2U5BJZaIW3xrdaAYCo2UHu/9ORtQv8EK/rxbCoal/sHlx21
xtsTq/TjWql4aHTBQ1jeBiPzpMbrSPzIEdtstfOmDXoYV5JlDfjxYFGzrzXF
FnMDxGmFB/iRIhLSc9OBeH+31XSeS+dHU6uS0xHxtiiUdeZc1VviP/Jgndha
a4vj8oK7HKkCqH7gybHcH7ZY+kRuc8A6AZQq4D9+YoZ4z4/o8xjHBbD754aL
jnQm1rbFNJ2pEECmlus9bzUm/lzh55jDFsDSZ7SZPFMmWsnHxhRoC+JEL39b
kh0Tdz4oXyg5IoiNFFN3uf1MlBE12dJeIYj5d9fEmYUy8Up3cLjFlCAG+jMv
/UhkYsK1u4EMEMLtyhKKQneYyNi7PvFGrBAqJJq8OVzNxO7mbXt6PwnhA19W
gVETE087OW1drSGM+2XP70t9zcSHVWWv2sKEUe32x3WdBLO0A23n3wvj1dK4
N9rPmTigSG0V0BZB51FW0VwDE/8ZfLhnHy+CFcWq+g+qmLh04e1rM44I1gw9
8rlUxMQLOuYbrHaJorvKrw2Ot5i40uETjfRCFDeK+qRnpDDRxMP6org5DV3c
RIIqY5n4pMDaxqyGhtSrdXlPIoj9XeeJHTQXw7+/dk2/JfYrrO6rV/FKDEs/
HjvSGsTEfTvoSic8FmEd86dM9WEmGloeuXRAQBwllcxlAr2YeKD4aeK1anHs
f2Lx6Ddxfps3NTf9MafjCQMpm7m9TPwfeXUQ0Q==
      "]]}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0.5549813482724425, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {
     Charting`ScaledTicks[{Log, Exp}, {Log, Exp}, "Nice", WorkingPrecision -> 
      15.954589770191003`, RotateLabel -> 0], 
     Charting`ScaledFrameTicks[{Log, Exp}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageMargins->0.,
  ImageSize->Automatic,
  ImageSizeRaw->Automatic,
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05], 
    "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Exp[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Exp[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0.5549813482724425, 4.060443010546419}, {-1.0285444100832422`, 
   480.7358150809471}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->FrontEndValueCache[{
     Charting`ScaledTicks[{Log, Exp}, {Log, Exp}, "Nice", WorkingPrecision -> 
      15.954589770191003`, RotateLabel -> 0], 
     Automatic}, {{{0.6931471805599453, 
       FormBox["2", TraditionalForm], {0.01, 0.}}, {1.6094379124341003`, 
       FormBox["5", TraditionalForm], {0.01, 0.}}, {2.302585092994046, 
       FormBox["10", TraditionalForm], {0.01, 0.}}, {2.995732273553991, 
       FormBox["20", TraditionalForm], {0.01, 0.}}, {3.912023005428146, 
       FormBox["50", TraditionalForm], {0.01, 0.}}, {0., 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      0.4054651081081644, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      1.0986122886681098`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      1.3862943611198906`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      1.791759469228055, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      1.9459101490553132`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      2.0794415416798357`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      2.1972245773362196`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      2.70805020110221, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      3.4011973816621555`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      3.6888794541139363`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      4.0943445622221, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      4.248495242049359, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      4.382026634673881, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      4.499809670330265, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      4.605170185988092, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}}, 
     Automatic}]]], "Output",
 CellChangeTimes->{3.8872981840734863`*^9, 3.88730039916063*^9, 
  3.8874799885876904`*^9},
 CellLabel->
  "Out[485]=",ExpressionUUID->"5f9cc327-b76f-4bd1-a9d7-a2f4b3196c41"]
}, Open  ]]
}, Open  ]]
},
Evaluator->"Local",
WindowSize->{2243, 1044},
WindowMargins->{{1691, Automatic}, {143, Automatic}},
TaggingRules->{"TryRealOnly" -> False},
Magnification:>1.25 Inherited,
FrontEndVersion->"13.2 for Mac OS X ARM (64-bit) (November 18, 2022)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"ed9f9817-2818-4ed4-8c0d-e80b7abeb420"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[400, 13, 433, 11, 37, "Input",ExpressionUUID->"4f183644-d51b-4934-8797-cc3f699f319f"],
Cell[836, 26, 1049, 31, 90, "Input",ExpressionUUID->"4fecc9d4-da1a-4199-8333-5b6f088492aa"],
Cell[1888, 59, 1784, 51, 114, "Input",ExpressionUUID->"2053419e-ff62-47cd-a596-c433be1e0184"],
Cell[CellGroupData[{
Cell[3697, 114, 234, 4, 67, "Subsection",ExpressionUUID->"2ae677b7-4bf9-426c-b3da-cc927b91c250"],
Cell[CellGroupData[{
Cell[3956, 122, 619, 16, 90, "Input",ExpressionUUID->"c225048a-7a31-4b10-9277-e410ef1b9617"],
Cell[4578, 140, 671, 13, 35, "Message",ExpressionUUID->"3199b06d-cd65-4d24-8c34-a7318b971aec"],
Cell[5252, 155, 6186, 139, 299, "Output",ExpressionUUID->"853fb128-c00e-4c6d-8f0b-3811c01212d1"]
}, Open  ]],
Cell[11453, 297, 1581, 48, 142, "Input",ExpressionUUID->"561778c2-bbf4-449f-93a0-6bd0aeb49793"],
Cell[CellGroupData[{
Cell[13059, 349, 4800, 130, 388, "Input",ExpressionUUID->"28ac7122-5b39-4a52-8e15-8edb127512bb"],
Cell[17862, 481, 314, 5, 42, "Output",ExpressionUUID->"0e293214-850c-4d55-ab3e-ab8cc5db8625"],
Cell[18179, 488, 7194, 171, 303, "Output",ExpressionUUID->"bd1e39b0-a059-4821-aa40-75c0ca779183"]
}, Open  ]],
Cell[CellGroupData[{
Cell[25410, 664, 3737, 105, 319, "Input",ExpressionUUID->"a44ddcbf-fcd8-48ed-8e24-d0c752d29701"],
Cell[29150, 771, 44125, 773, 279, "Output",ExpressionUUID->"7f5cf94f-9b88-4bfd-bd4d-e2b106842033"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[73324, 1550, 163, 3, 67, "Subsection",ExpressionUUID->"1de0fbae-a313-4e3c-b526-e7f36488a402"],
Cell[CellGroupData[{
Cell[73512, 1557, 551, 13, 90, "Input",ExpressionUUID->"ee2a05ce-c656-4e0a-9f70-7976bf85a1e5"],
Cell[74066, 1572, 745, 14, 35, "Message",ExpressionUUID->"b0d4f0df-d221-4d6c-82ce-59f087b08e8e"],
Cell[74814, 1588, 6566, 145, 299, "Output",ExpressionUUID->"7bbaf6ba-623d-4470-a574-c97141466d77"]
}, Open  ]],
Cell[81395, 1736, 1581, 48, 142, "Input",ExpressionUUID->"0ab8f45f-afd0-43cc-b5c9-d9b867171928"],
Cell[CellGroupData[{
Cell[83001, 1788, 5179, 143, 414, "Input",ExpressionUUID->"f4643573-f63d-4d52-b84a-d559df2ee9d5"],
Cell[88183, 1933, 462, 8, 42, "Output",ExpressionUUID->"a921b0a7-2683-45e8-8c25-0a25452181c8"],
Cell[88648, 1943, 461, 8, 42, "Output",ExpressionUUID->"d9069c95-1a4a-439f-8972-b1553b7f7be8"],
Cell[89112, 1953, 12147, 256, 307, "Output",ExpressionUUID->"3f79d1a8-9848-4d20-aa75-7b38cca3c089"]
}, Open  ]],
Cell[CellGroupData[{
Cell[101296, 2214, 3596, 102, 232, "Input",ExpressionUUID->"7a187251-e2a0-41d4-90b8-c91b710c06e7"],
Cell[104895, 2318, 44468, 780, 283, "Output",ExpressionUUID->"eb2bdb63-44e4-4809-8a37-75e99723ec2c"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[149412, 3104, 270, 4, 67, "Subsection",ExpressionUUID->"9a7eec7c-b669-465c-80a1-9b131b01b482"],
Cell[149685, 3110, 2323, 63, 139, "Input",ExpressionUUID->"2fa91bba-197c-4ad7-8264-6494d417dcaa"],
Cell[CellGroupData[{
Cell[152033, 3177, 551, 13, 90, "Input",ExpressionUUID->"95812b96-8751-4322-9746-9669d0ff0942"],
Cell[152587, 3192, 826, 15, 35, "Message",ExpressionUUID->"7ea5e15c-cd7d-4d3e-abd2-5d26f74cf5e2"],
Cell[153416, 3209, 6644, 146, 299, "Output",ExpressionUUID->"85a0c226-a989-42d6-9b4a-eebca574c272"]
}, Open  ]],
Cell[160075, 3358, 1581, 48, 142, "Input",ExpressionUUID->"83f689fa-f260-4516-98df-41e17ef92a1a"],
Cell[CellGroupData[{
Cell[161681, 3410, 3963, 104, 330, "Input",ExpressionUUID->"090e5f0d-16cf-4084-9ea5-8ab1d48e789c"],
Cell[165647, 3516, 418, 7, 42, "Output",ExpressionUUID->"4d8369ae-4555-4fcb-93ba-dfdb3b091c25"],
Cell[166068, 3525, 12096, 255, 295, "Output",ExpressionUUID->"9cd2fc45-8323-4c80-9822-9fdcd95d769f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[178201, 3785, 1876, 49, 116, "Input",ExpressionUUID->"4ccbb8ac-0682-4f42-af41-4d78fa06aed2"],
Cell[180080, 3836, 935, 21, 42, "Output",ExpressionUUID->"d09246cf-a415-484a-bf46-9b8d914125dc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[181052, 3862, 395, 11, 37, "Input",ExpressionUUID->"abedd256-efd3-40e5-997f-41fd1d3c6519"],
Cell[181450, 3875, 311, 5, 42, "Output",ExpressionUUID->"8a81195c-a0a4-43af-9126-c42812ba59cb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[181798, 3885, 3500, 96, 142, "Input",ExpressionUUID->"cdbedc6a-2661-4bab-aa82-8b251d4e62d4"],
Cell[185301, 3983, 43910, 772, 279, "Output",ExpressionUUID->"85bcc185-9816-4c94-926e-6d4b3aa89264"]
}, Open  ]],
Cell[CellGroupData[{
Cell[229248, 4760, 7560, 210, 485, "Input",ExpressionUUID->"7d98ec8a-fa3e-4213-9d6f-6500b0f20e7a"],
Cell[236811, 4972, 118553, 1999, 283, "Output",ExpressionUUID->"0efe6d22-5760-4012-beba-b779eb958a21"]
}, Open  ]],
Cell[CellGroupData[{
Cell[355401, 6976, 514, 13, 37, "Input",ExpressionUUID->"0d8adf99-7f1e-4fac-b365-17bd9475835e"],
Cell[355918, 6991, 19575, 381, 298, "Output",ExpressionUUID->"5f9cc327-b76f-4bd1-a9d7-a2f4b3196c41"]
}, Open  ]]
}, Open  ]]
}
]
*)

